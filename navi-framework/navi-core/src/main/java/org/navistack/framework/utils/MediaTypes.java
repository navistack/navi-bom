package org.navistack.framework.utils;

import lombok.experimental.UtilityClass;

import java.util.*;
import java.util.Arrays;
import java.util.Collections;
import java.util.concurrent.ConcurrentHashMap;

/**
 * MIME Types
 *
 * @see <a href="http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types">http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types</a>
 */
@UtilityClass
public class MediaTypes {
    public final MediaType APPLICATION_1D_INTERLEAVED_PARITYFEC = of("application", "1d-interleaved-parityfec");
    public final MediaType APPLICATION_3GPDASH_QOE_REPORT_XML = of("application", "3gpdash-qoe-report+xml");
    public final MediaType APPLICATION_3GPP_IMS_XML = of("application", "3gpp-ims+xml");
    public final MediaType APPLICATION_A2L = of("application", "a2l");
    public final MediaType APPLICATION_ACTIVEMESSAGE = of("application", "activemessage");
    public final MediaType APPLICATION_ALTO_COSTMAP_JSON = of("application", "alto-costmap+json");
    public final MediaType APPLICATION_ALTO_COSTMAPFILTER_JSON = of("application", "alto-costmapfilter+json");
    public final MediaType APPLICATION_ALTO_DIRECTORY_JSON = of("application", "alto-directory+json");
    public final MediaType APPLICATION_ALTO_ENDPOINTCOST_JSON = of("application", "alto-endpointcost+json");
    public final MediaType APPLICATION_ALTO_ENDPOINTCOSTPARAMS_JSON = of("application", "alto-endpointcostparams+json");
    public final MediaType APPLICATION_ALTO_ENDPOINTPROP_JSON = of("application", "alto-endpointprop+json");
    public final MediaType APPLICATION_ALTO_ENDPOINTPROPPARAMS_JSON = of("application", "alto-endpointpropparams+json");
    public final MediaType APPLICATION_ALTO_ERROR_JSON = of("application", "alto-error+json");
    public final MediaType APPLICATION_ALTO_NETWORKMAP_JSON = of("application", "alto-networkmap+json");
    public final MediaType APPLICATION_ALTO_NETWORKMAPFILTER_JSON = of("application", "alto-networkmapfilter+json");
    public final MediaType APPLICATION_AML = of("application", "aml");
    public final MediaType APPLICATION_ANDREW_INSET = of("application", "andrew-inset", "ez");
    public final MediaType APPLICATION_APPLEFILE = of("application", "applefile");
    public final MediaType APPLICATION_APPLIXWARE = of("application", "applixware", "aw");
    public final MediaType APPLICATION_ATF = of("application", "atf");
    public final MediaType APPLICATION_ATFX = of("application", "atfx");
    public final MediaType APPLICATION_ATOM_XML = of("application", "atom+xml", "atom");
    public final MediaType APPLICATION_ATOMCAT_XML = of("application", "atomcat+xml", "atomcat");
    public final MediaType APPLICATION_ATOMDELETED_XML = of("application", "atomdeleted+xml");
    public final MediaType APPLICATION_ATOMICMAIL = of("application", "atomicmail");
    public final MediaType APPLICATION_ATOMSVC_XML = of("application", "atomsvc+xml", "atomsvc");
    public final MediaType APPLICATION_ATXML = of("application", "atxml");
    public final MediaType APPLICATION_AUTH_POLICY_XML = of("application", "auth-policy+xml");
    public final MediaType APPLICATION_BACNET_XDD_ZIP = of("application", "bacnet-xdd+zip");
    public final MediaType APPLICATION_BATCH_SMTP = of("application", "batch-smtp");
    public final MediaType APPLICATION_BEEP_XML = of("application", "beep+xml");
    public final MediaType APPLICATION_CALENDAR_JSON = of("application", "calendar+json");
    public final MediaType APPLICATION_CALENDAR_XML = of("application", "calendar+xml");
    public final MediaType APPLICATION_CALL_COMPLETION = of("application", "call-completion");
    public final MediaType APPLICATION_CALS_1840 = of("application", "cals-1840");
    public final MediaType APPLICATION_CBOR = of("application", "cbor");
    public final MediaType APPLICATION_CCMP_XML = of("application", "ccmp+xml");
    public final MediaType APPLICATION_CCXML_XML = of("application", "ccxml+xml", "ccxml");
    public final MediaType APPLICATION_CDFX_XML = of("application", "cdfx+xml");
    public final MediaType APPLICATION_CDMI_CAPABILITY = of("application", "cdmi-capability", "cdmia");
    public final MediaType APPLICATION_CDMI_CONTAINER = of("application", "cdmi-container", "cdmic");
    public final MediaType APPLICATION_CDMI_DOMAIN = of("application", "cdmi-domain", "cdmid");
    public final MediaType APPLICATION_CDMI_OBJECT = of("application", "cdmi-object", "cdmio");
    public final MediaType APPLICATION_CDMI_QUEUE = of("application", "cdmi-queue", "cdmiq");
    public final MediaType APPLICATION_CDNI = of("application", "cdni");
    public final MediaType APPLICATION_CEA = of("application", "cea");
    public final MediaType APPLICATION_CEA_2018_XML = of("application", "cea-2018+xml");
    public final MediaType APPLICATION_CELLML_XML = of("application", "cellml+xml");
    public final MediaType APPLICATION_CFW = of("application", "cfw");
    public final MediaType APPLICATION_CMS = of("application", "cms");
    public final MediaType APPLICATION_CNRP_XML = of("application", "cnrp+xml");
    public final MediaType APPLICATION_COAP_GROUP_JSON = of("application", "coap-group+json");
    public final MediaType APPLICATION_COMMONGROUND = of("application", "commonground");
    public final MediaType APPLICATION_CONFERENCE_INFO_XML = of("application", "conference-info+xml");
    public final MediaType APPLICATION_CPL_XML = of("application", "cpl+xml");
    public final MediaType APPLICATION_CSRATTRS = of("application", "csrattrs");
    public final MediaType APPLICATION_CSTA_XML = of("application", "csta+xml");
    public final MediaType APPLICATION_CSTADATA_XML = of("application", "cstadata+xml");
    public final MediaType APPLICATION_CSVM_JSON = of("application", "csvm+json");
    public final MediaType APPLICATION_CU_SEEME = of("application", "cu-seeme", "cu");
    public final MediaType APPLICATION_CYBERCASH = of("application", "cybercash");
    public final MediaType APPLICATION_DASH_XML = of("application", "dash+xml");
    public final MediaType APPLICATION_DASHDELTA = of("application", "dashdelta");
    public final MediaType APPLICATION_DAVMOUNT_XML = of("application", "davmount+xml", "davmount");
    public final MediaType APPLICATION_DCA_RFT = of("application", "dca-rft");
    public final MediaType APPLICATION_DCD = of("application", "dcd");
    public final MediaType APPLICATION_DEC_DX = of("application", "dec-dx");
    public final MediaType APPLICATION_DIALOG_INFO_XML = of("application", "dialog-info+xml");
    public final MediaType APPLICATION_DICOM = of("application", "dicom");
    public final MediaType APPLICATION_DII = of("application", "dii");
    public final MediaType APPLICATION_DIT = of("application", "dit");
    public final MediaType APPLICATION_DNS = of("application", "dns");
    public final MediaType APPLICATION_DOCBOOK_XML = of("application", "docbook+xml", "dbk");
    public final MediaType APPLICATION_DSKPP_XML = of("application", "dskpp+xml");
    public final MediaType APPLICATION_DSSC_DER = of("application", "dssc+der", "dssc");
    public final MediaType APPLICATION_DSSC_XML = of("application", "dssc+xml", "xdssc");
    public final MediaType APPLICATION_DVCS = of("application", "dvcs");
    public final MediaType APPLICATION_ECMASCRIPT = of("application", "ecmascript", "ecma");
    public final MediaType APPLICATION_EDI_CONSENT = of("application", "edi-consent");
    public final MediaType APPLICATION_EDI_X12 = of("application", "edi-x12");
    public final MediaType APPLICATION_EDIFACT = of("application", "edifact");
    public final MediaType APPLICATION_EFI = of("application", "efi");
    public final MediaType APPLICATION_EMERGENCYCALLDATA_COMMENT_XML = of("application", "emergencycalldata.comment+xml");
    public final MediaType APPLICATION_EMERGENCYCALLDATA_DEVICEINFO_XML = of("application", "emergencycalldata.deviceinfo+xml");
    public final MediaType APPLICATION_EMERGENCYCALLDATA_PROVIDERINFO_XML = of("application", "emergencycalldata.providerinfo+xml");
    public final MediaType APPLICATION_EMERGENCYCALLDATA_SERVICEINFO_XML = of("application", "emergencycalldata.serviceinfo+xml");
    public final MediaType APPLICATION_EMERGENCYCALLDATA_SUBSCRIBERINFO_XML = of("application", "emergencycalldata.subscriberinfo+xml");
    public final MediaType APPLICATION_EMMA_XML = of("application", "emma+xml", "emma");
    public final MediaType APPLICATION_EMOTIONML_XML = of("application", "emotionml+xml");
    public final MediaType APPLICATION_ENCAPRTP = of("application", "encaprtp");
    public final MediaType APPLICATION_EPP_XML = of("application", "epp+xml");
    public final MediaType APPLICATION_EPUB_ZIP = of("application", "epub+zip", "epub");
    public final MediaType APPLICATION_ESHOP = of("application", "eshop");
    public final MediaType APPLICATION_EXAMPLE = of("application", "example");
    public final MediaType APPLICATION_EXI = of("application", "exi", "exi");
    public final MediaType APPLICATION_FASTINFOSET = of("application", "fastinfoset");
    public final MediaType APPLICATION_FASTSOAP = of("application", "fastsoap");
    public final MediaType APPLICATION_FDT_XML = of("application", "fdt+xml");
    public final MediaType APPLICATION_FITS = of("application", "fits");
    public final MediaType APPLICATION_FONT_TDPFR = of("application", "font-tdpfr", "pfr");
    public final MediaType APPLICATION_FRAMEWORK_ATTRIBUTES_XML = of("application", "framework-attributes+xml");
    public final MediaType APPLICATION_GEO_JSON = of("application", "geo+json");
    public final MediaType APPLICATION_GML_XML = of("application", "gml+xml", "gml");
    public final MediaType APPLICATION_GPX_XML = of("application", "gpx+xml", "gpx");
    public final MediaType APPLICATION_GXF = of("application", "gxf", "gxf");
    public final MediaType APPLICATION_GZIP = of("application", "gzip");
    public final MediaType APPLICATION_H224 = of("application", "h224");
    public final MediaType APPLICATION_HELD_XML = of("application", "held+xml");
    public final MediaType APPLICATION_HTTP = of("application", "http");
    public final MediaType APPLICATION_HYPERSTUDIO = of("application", "hyperstudio", "stk");
    public final MediaType APPLICATION_IBE_KEY_REQUEST_XML = of("application", "ibe-key-request+xml");
    public final MediaType APPLICATION_IBE_PKG_REPLY_XML = of("application", "ibe-pkg-reply+xml");
    public final MediaType APPLICATION_IBE_PP_DATA = of("application", "ibe-pp-data");
    public final MediaType APPLICATION_IGES = of("application", "iges");
    public final MediaType APPLICATION_IM_ISCOMPOSING_XML = of("application", "im-iscomposing+xml");
    public final MediaType APPLICATION_INDEX = of("application", "index");
    public final MediaType APPLICATION_INDEX_CMD = of("application", "index.cmd");
    public final MediaType APPLICATION_INDEX_OBJ = of("application", "index.obj");
    public final MediaType APPLICATION_INDEX_RESPONSE = of("application", "index.response");
    public final MediaType APPLICATION_INDEX_VND = of("application", "index.vnd");
    public final MediaType APPLICATION_INKML_XML = of("application", "inkml+xml", "ink", "inkml");
    public final MediaType APPLICATION_IOTP = of("application", "iotp");
    public final MediaType APPLICATION_IPFIX = of("application", "ipfix", "ipfix");
    public final MediaType APPLICATION_IPP = of("application", "ipp");
    public final MediaType APPLICATION_ISUP = of("application", "isup");
    public final MediaType APPLICATION_ITS_XML = of("application", "its+xml");
    public final MediaType APPLICATION_JAVA_ARCHIVE = of("application", "java-archive", "jar");
    public final MediaType APPLICATION_JAVA_SERIALIZED_OBJECT = of("application", "java-serialized-object", "ser");
    public final MediaType APPLICATION_JAVA_VM = of("application", "java-vm", "class");
    public final MediaType APPLICATION_JAVASCRIPT = of("application", "javascript");
    public final MediaType APPLICATION_JOSE = of("application", "jose");
    public final MediaType APPLICATION_JOSE_JSON = of("application", "jose+json");
    public final MediaType APPLICATION_JRD_JSON = of("application", "jrd+json");
    public final MediaType APPLICATION_JSON = of("application", "json", "json");
    public final MediaType APPLICATION_JSON_PATCH_JSON = of("application", "json-patch+json");
    public final MediaType APPLICATION_JSON_SEQ = of("application", "json-seq");
    public final MediaType APPLICATION_JSONML_JSON = of("application", "jsonml+json", "jsonml");
    public final MediaType APPLICATION_JWK_JSON = of("application", "jwk+json");
    public final MediaType APPLICATION_JWK_SET_JSON = of("application", "jwk-set+json");
    public final MediaType APPLICATION_JWT = of("application", "jwt");
    public final MediaType APPLICATION_KPML_REQUEST_XML = of("application", "kpml-request+xml");
    public final MediaType APPLICATION_KPML_RESPONSE_XML = of("application", "kpml-response+xml");
    public final MediaType APPLICATION_LD_JSON = of("application", "ld+json");
    public final MediaType APPLICATION_LGR_XML = of("application", "lgr+xml");
    public final MediaType APPLICATION_LINK_FORMAT = of("application", "link-format");
    public final MediaType APPLICATION_LOAD_CONTROL_XML = of("application", "load-control+xml");
    public final MediaType APPLICATION_LOST_XML = of("application", "lost+xml", "lostxml");
    public final MediaType APPLICATION_LOSTSYNC_XML = of("application", "lostsync+xml");
    public final MediaType APPLICATION_LXF = of("application", "lxf");
    public final MediaType APPLICATION_MAC_BINHEX40 = of("application", "mac-binhex40", "hqx");
    public final MediaType APPLICATION_MAC_COMPACTPRO = of("application", "mac-compactpro", "cpt");
    public final MediaType APPLICATION_MACWRITEII = of("application", "macwriteii");
    public final MediaType APPLICATION_MADS_XML = of("application", "mads+xml", "mads");
    public final MediaType APPLICATION_MARC = of("application", "marc", "mrc");
    public final MediaType APPLICATION_MARCXML_XML = of("application", "marcxml+xml", "mrcx");
    public final MediaType APPLICATION_MATHEMATICA = of("application", "mathematica", "ma", "nb", "mb");
    public final MediaType APPLICATION_MATHML_XML = of("application", "mathml+xml", "mathml");
    public final MediaType APPLICATION_MATHML_CONTENT_XML = of("application", "mathml-content+xml");
    public final MediaType APPLICATION_MATHML_PRESENTATION_XML = of("application", "mathml-presentation+xml");
    public final MediaType APPLICATION_MBMS_ASSOCIATED_PROCEDURE_DESCRIPTION_XML = of("application", "mbms-associated-procedure-description+xml");
    public final MediaType APPLICATION_MBMS_DEREGISTER_XML = of("application", "mbms-deregister+xml");
    public final MediaType APPLICATION_MBMS_ENVELOPE_XML = of("application", "mbms-envelope+xml");
    public final MediaType APPLICATION_MBMS_MSK_XML = of("application", "mbms-msk+xml");
    public final MediaType APPLICATION_MBMS_MSK_RESPONSE_XML = of("application", "mbms-msk-response+xml");
    public final MediaType APPLICATION_MBMS_PROTECTION_DESCRIPTION_XML = of("application", "mbms-protection-description+xml");
    public final MediaType APPLICATION_MBMS_RECEPTION_REPORT_XML = of("application", "mbms-reception-report+xml");
    public final MediaType APPLICATION_MBMS_REGISTER_XML = of("application", "mbms-register+xml");
    public final MediaType APPLICATION_MBMS_REGISTER_RESPONSE_XML = of("application", "mbms-register-response+xml");
    public final MediaType APPLICATION_MBMS_SCHEDULE_XML = of("application", "mbms-schedule+xml");
    public final MediaType APPLICATION_MBMS_USER_SERVICE_DESCRIPTION_XML = of("application", "mbms-user-service-description+xml");
    public final MediaType APPLICATION_MBOX = of("application", "mbox", "mbox");
    public final MediaType APPLICATION_MEDIA_POLICY_DATASET_XML = of("application", "media-policy-dataset+xml");
    public final MediaType APPLICATION_MEDIA_CONTROL_XML = of("application", "media_control+xml");
    public final MediaType APPLICATION_MEDIASERVERCONTROL_XML = of("application", "mediaservercontrol+xml", "mscml");
    public final MediaType APPLICATION_MERGE_PATCH_JSON = of("application", "merge-patch+json");
    public final MediaType APPLICATION_METALINK_XML = of("application", "metalink+xml", "metalink");
    public final MediaType APPLICATION_METALINK4_XML = of("application", "metalink4+xml", "meta4");
    public final MediaType APPLICATION_METS_XML = of("application", "mets+xml", "mets");
    public final MediaType APPLICATION_MF4 = of("application", "mf4");
    public final MediaType APPLICATION_MIKEY = of("application", "mikey");
    public final MediaType APPLICATION_MODS_XML = of("application", "mods+xml", "mods");
    public final MediaType APPLICATION_MOSS_KEYS = of("application", "moss-keys");
    public final MediaType APPLICATION_MOSS_SIGNATURE = of("application", "moss-signature");
    public final MediaType APPLICATION_MOSSKEY_DATA = of("application", "mosskey-data");
    public final MediaType APPLICATION_MOSSKEY_REQUEST = of("application", "mosskey-request");
    public final MediaType APPLICATION_MP21 = of("application", "mp21", "m21", "mp21");
    public final MediaType APPLICATION_MP4 = of("application", "mp4", "mp4s");
    public final MediaType APPLICATION_MPEG4_GENERIC = of("application", "mpeg4-generic");
    public final MediaType APPLICATION_MPEG4_IOD = of("application", "mpeg4-iod");
    public final MediaType APPLICATION_MPEG4_IOD_XMT = of("application", "mpeg4-iod-xmt");
    public final MediaType APPLICATION_MRB_CONSUMER_XML = of("application", "mrb-consumer+xml");
    public final MediaType APPLICATION_MRB_PUBLISH_XML = of("application", "mrb-publish+xml");
    public final MediaType APPLICATION_MSC_IVR_XML = of("application", "msc-ivr+xml");
    public final MediaType APPLICATION_MSC_MIXER_XML = of("application", "msc-mixer+xml");
    public final MediaType APPLICATION_MSWORD = of("application", "msword", "doc", "dot");
    public final MediaType APPLICATION_MXF = of("application", "mxf", "mxf");
    public final MediaType APPLICATION_NASDATA = of("application", "nasdata");
    public final MediaType APPLICATION_NEWS_CHECKGROUPS = of("application", "news-checkgroups");
    public final MediaType APPLICATION_NEWS_GROUPINFO = of("application", "news-groupinfo");
    public final MediaType APPLICATION_NEWS_TRANSMISSION = of("application", "news-transmission");
    public final MediaType APPLICATION_NLSML_XML = of("application", "nlsml+xml");
    public final MediaType APPLICATION_NSS = of("application", "nss");
    public final MediaType APPLICATION_OCSP_REQUEST = of("application", "ocsp-request");
    public final MediaType APPLICATION_OCSP_RESPONSE = of("application", "ocsp-response");
    public final MediaType APPLICATION_OCTET_STREAM = of("application", "octet-stream", "bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy");
    public final MediaType APPLICATION_ODA = of("application", "oda", "oda");
    public final MediaType APPLICATION_ODX = of("application", "odx");
    public final MediaType APPLICATION_OEBPS_PACKAGE_XML = of("application", "oebps-package+xml", "opf");
    public final MediaType APPLICATION_OGG = of("application", "ogg", "ogx");
    public final MediaType APPLICATION_OMDOC_XML = of("application", "omdoc+xml", "omdoc");
    public final MediaType APPLICATION_ONENOTE = of("application", "onenote", "onetoc", "onetoc2", "onetmp", "onepkg");
    public final MediaType APPLICATION_OXPS = of("application", "oxps", "oxps");
    public final MediaType APPLICATION_P2P_OVERLAY_XML = of("application", "p2p-overlay+xml");
    public final MediaType APPLICATION_PARITYFEC = of("application", "parityfec");
    public final MediaType APPLICATION_PATCH_OPS_ERROR_XML = of("application", "patch-ops-error+xml", "xer");
    public final MediaType APPLICATION_PDF = of("application", "pdf", "pdf");
    public final MediaType APPLICATION_PDX = of("application", "pdx");
    public final MediaType APPLICATION_PGP_ENCRYPTED = of("application", "pgp-encrypted", "pgp");
    public final MediaType APPLICATION_PGP_KEYS = of("application", "pgp-keys");
    public final MediaType APPLICATION_PGP_SIGNATURE = of("application", "pgp-signature", "asc", "sig");
    public final MediaType APPLICATION_PICS_RULES = of("application", "pics-rules", "prf");
    public final MediaType APPLICATION_PIDF_XML = of("application", "pidf+xml");
    public final MediaType APPLICATION_PIDF_DIFF_XML = of("application", "pidf-diff+xml");
    public final MediaType APPLICATION_PKCS10 = of("application", "pkcs10", "p10");
    public final MediaType APPLICATION_PKCS12 = of("application", "pkcs12");
    public final MediaType APPLICATION_PKCS7_MIME = of("application", "pkcs7-mime", "p7m", "p7c");
    public final MediaType APPLICATION_PKCS7_SIGNATURE = of("application", "pkcs7-signature", "p7s");
    public final MediaType APPLICATION_PKCS8 = of("application", "pkcs8", "p8");
    public final MediaType APPLICATION_PKIX_ATTR_CERT = of("application", "pkix-attr-cert", "ac");
    public final MediaType APPLICATION_PKIX_CERT = of("application", "pkix-cert", "cer");
    public final MediaType APPLICATION_PKIX_CRL = of("application", "pkix-crl", "crl");
    public final MediaType APPLICATION_PKIX_PKIPATH = of("application", "pkix-pkipath", "pkipath");
    public final MediaType APPLICATION_PKIXCMP = of("application", "pkixcmp", "pki");
    public final MediaType APPLICATION_PLS_XML = of("application", "pls+xml", "pls");
    public final MediaType APPLICATION_POC_SETTINGS_XML = of("application", "poc-settings+xml");
    public final MediaType APPLICATION_POSTSCRIPT = of("application", "postscript", "ai", "eps", "ps");
    public final MediaType APPLICATION_PPSP_TRACKER_JSON = of("application", "ppsp-tracker+json");
    public final MediaType APPLICATION_PROBLEM_JSON = of("application", "problem+json");
    public final MediaType APPLICATION_PROBLEM_XML = of("application", "problem+xml");
    public final MediaType APPLICATION_PROVENANCE_XML = of("application", "provenance+xml");
    public final MediaType APPLICATION_PRS_ALVESTRAND_TITRAX_SHEET = of("application", "prs.alvestrand.titrax-sheet");
    public final MediaType APPLICATION_PRS_CWW = of("application", "prs.cww", "cww");
    public final MediaType APPLICATION_PRS_HPUB_ZIP = of("application", "prs.hpub+zip");
    public final MediaType APPLICATION_PRS_NPREND = of("application", "prs.nprend");
    public final MediaType APPLICATION_PRS_PLUCKER = of("application", "prs.plucker");
    public final MediaType APPLICATION_PRS_RDF_XML_CRYPT = of("application", "prs.rdf-xml-crypt");
    public final MediaType APPLICATION_PRS_XSF_XML = of("application", "prs.xsf+xml");
    public final MediaType APPLICATION_PSKC_XML = of("application", "pskc+xml", "pskcxml");
    public final MediaType APPLICATION_QSIG = of("application", "qsig");
    public final MediaType APPLICATION_RAPTORFEC = of("application", "raptorfec");
    public final MediaType APPLICATION_RDAP_JSON = of("application", "rdap+json");
    public final MediaType APPLICATION_RDF_XML = of("application", "rdf+xml", "rdf");
    public final MediaType APPLICATION_REGINFO_XML = of("application", "reginfo+xml", "rif");
    public final MediaType APPLICATION_RELAX_NG_COMPACT_SYNTAX = of("application", "relax-ng-compact-syntax", "rnc");
    public final MediaType APPLICATION_REMOTE_PRINTING = of("application", "remote-printing");
    public final MediaType APPLICATION_REPUTON_JSON = of("application", "reputon+json");
    public final MediaType APPLICATION_RESOURCE_LISTS_XML = of("application", "resource-lists+xml", "rl");
    public final MediaType APPLICATION_RESOURCE_LISTS_DIFF_XML = of("application", "resource-lists-diff+xml", "rld");
    public final MediaType APPLICATION_RFC_XML = of("application", "rfc+xml");
    public final MediaType APPLICATION_RISCOS = of("application", "riscos");
    public final MediaType APPLICATION_RLMI_XML = of("application", "rlmi+xml");
    public final MediaType APPLICATION_RLS_SERVICES_XML = of("application", "rls-services+xml", "rs");
    public final MediaType APPLICATION_RPKI_GHOSTBUSTERS = of("application", "rpki-ghostbusters", "gbr");
    public final MediaType APPLICATION_RPKI_MANIFEST = of("application", "rpki-manifest", "mft");
    public final MediaType APPLICATION_RPKI_ROA = of("application", "rpki-roa", "roa");
    public final MediaType APPLICATION_RPKI_UPDOWN = of("application", "rpki-updown");
    public final MediaType APPLICATION_RSD_XML = of("application", "rsd+xml", "rsd");
    public final MediaType APPLICATION_RSS_XML = of("application", "rss+xml", "rss");
    public final MediaType APPLICATION_RTF = of("application", "rtf", "rtf");
    public final MediaType APPLICATION_RTPLOOPBACK = of("application", "rtploopback");
    public final MediaType APPLICATION_RTX = of("application", "rtx");
    public final MediaType APPLICATION_SAMLASSERTION_XML = of("application", "samlassertion+xml");
    public final MediaType APPLICATION_SAMLMETADATA_XML = of("application", "samlmetadata+xml");
    public final MediaType APPLICATION_SBML_XML = of("application", "sbml+xml", "sbml");
    public final MediaType APPLICATION_SCAIP_XML = of("application", "scaip+xml");
    public final MediaType APPLICATION_SCIM_JSON = of("application", "scim+json");
    public final MediaType APPLICATION_SCVP_CV_REQUEST = of("application", "scvp-cv-request", "scq");
    public final MediaType APPLICATION_SCVP_CV_RESPONSE = of("application", "scvp-cv-response", "scs");
    public final MediaType APPLICATION_SCVP_VP_REQUEST = of("application", "scvp-vp-request", "spq");
    public final MediaType APPLICATION_SCVP_VP_RESPONSE = of("application", "scvp-vp-response", "spp");
    public final MediaType APPLICATION_SDP = of("application", "sdp", "sdp");
    public final MediaType APPLICATION_SEP_XML = of("application", "sep+xml");
    public final MediaType APPLICATION_SEP_EXI = of("application", "sep-exi");
    public final MediaType APPLICATION_SESSION_INFO = of("application", "session-info");
    public final MediaType APPLICATION_SET_PAYMENT = of("application", "set-payment");
    public final MediaType APPLICATION_SET_PAYMENT_INITIATION = of("application", "set-payment-initiation", "setpay");
    public final MediaType APPLICATION_SET_REGISTRATION = of("application", "set-registration");
    public final MediaType APPLICATION_SET_REGISTRATION_INITIATION = of("application", "set-registration-initiation", "setreg");
    public final MediaType APPLICATION_SGML = of("application", "sgml");
    public final MediaType APPLICATION_SGML_OPEN_CATALOG = of("application", "sgml-open-catalog");
    public final MediaType APPLICATION_SHF_XML = of("application", "shf+xml", "shf");
    public final MediaType APPLICATION_SIEVE = of("application", "sieve");
    public final MediaType APPLICATION_SIMPLE_FILTER_XML = of("application", "simple-filter+xml");
    public final MediaType APPLICATION_SIMPLE_MESSAGE_SUMMARY = of("application", "simple-message-summary");
    public final MediaType APPLICATION_SIMPLESYMBOLCONTAINER = of("application", "simplesymbolcontainer");
    public final MediaType APPLICATION_SLATE = of("application", "slate");
    public final MediaType APPLICATION_SMIL = of("application", "smil");
    public final MediaType APPLICATION_SMIL_XML = of("application", "smil+xml", "smi", "smil");
    public final MediaType APPLICATION_SMPTE336M = of("application", "smpte336m");
    public final MediaType APPLICATION_SOAP_FASTINFOSET = of("application", "soap+fastinfoset");
    public final MediaType APPLICATION_SOAP_XML = of("application", "soap+xml");
    public final MediaType APPLICATION_SPARQL_QUERY = of("application", "sparql-query", "rq");
    public final MediaType APPLICATION_SPARQL_RESULTS_XML = of("application", "sparql-results+xml", "srx");
    public final MediaType APPLICATION_SPIRITS_EVENT_XML = of("application", "spirits-event+xml");
    public final MediaType APPLICATION_SQL = of("application", "sql");
    public final MediaType APPLICATION_SRGS = of("application", "srgs", "gram");
    public final MediaType APPLICATION_SRGS_XML = of("application", "srgs+xml", "grxml");
    public final MediaType APPLICATION_SRU_XML = of("application", "sru+xml", "sru");
    public final MediaType APPLICATION_SSDL_XML = of("application", "ssdl+xml", "ssdl");
    public final MediaType APPLICATION_SSML_XML = of("application", "ssml+xml", "ssml");
    public final MediaType APPLICATION_TAMP_APEX_UPDATE = of("application", "tamp-apex-update");
    public final MediaType APPLICATION_TAMP_APEX_UPDATE_CONFIRM = of("application", "tamp-apex-update-confirm");
    public final MediaType APPLICATION_TAMP_COMMUNITY_UPDATE = of("application", "tamp-community-update");
    public final MediaType APPLICATION_TAMP_COMMUNITY_UPDATE_CONFIRM = of("application", "tamp-community-update-confirm");
    public final MediaType APPLICATION_TAMP_ERROR = of("application", "tamp-error");
    public final MediaType APPLICATION_TAMP_SEQUENCE_ADJUST = of("application", "tamp-sequence-adjust");
    public final MediaType APPLICATION_TAMP_SEQUENCE_ADJUST_CONFIRM = of("application", "tamp-sequence-adjust-confirm");
    public final MediaType APPLICATION_TAMP_STATUS_QUERY = of("application", "tamp-status-query");
    public final MediaType APPLICATION_TAMP_STATUS_RESPONSE = of("application", "tamp-status-response");
    public final MediaType APPLICATION_TAMP_UPDATE = of("application", "tamp-update");
    public final MediaType APPLICATION_TAMP_UPDATE_CONFIRM = of("application", "tamp-update-confirm");
    public final MediaType APPLICATION_TEI_XML = of("application", "tei+xml", "tei", "teicorpus");
    public final MediaType APPLICATION_THRAUD_XML = of("application", "thraud+xml", "tfi");
    public final MediaType APPLICATION_TIMESTAMP_QUERY = of("application", "timestamp-query");
    public final MediaType APPLICATION_TIMESTAMP_REPLY = of("application", "timestamp-reply");
    public final MediaType APPLICATION_TIMESTAMPED_DATA = of("application", "timestamped-data", "tsd");
    public final MediaType APPLICATION_TTML_XML = of("application", "ttml+xml");
    public final MediaType APPLICATION_TVE_TRIGGER = of("application", "tve-trigger");
    public final MediaType APPLICATION_ULPFEC = of("application", "ulpfec");
    public final MediaType APPLICATION_URC_GRPSHEET_XML = of("application", "urc-grpsheet+xml");
    public final MediaType APPLICATION_URC_RESSHEET_XML = of("application", "urc-ressheet+xml");
    public final MediaType APPLICATION_URC_TARGETDESC_XML = of("application", "urc-targetdesc+xml");
    public final MediaType APPLICATION_URC_UISOCKETDESC_XML = of("application", "urc-uisocketdesc+xml");
    public final MediaType APPLICATION_VCARD_JSON = of("application", "vcard+json");
    public final MediaType APPLICATION_VCARD_XML = of("application", "vcard+xml");
    public final MediaType APPLICATION_VEMMI = of("application", "vemmi");
    public final MediaType APPLICATION_VIVIDENCE_SCRIPTFILE = of("application", "vividence.scriptfile");
    public final MediaType APPLICATION_VND_3GPP_PROSE_XML = of("application", "vnd.3gpp-prose+xml");
    public final MediaType APPLICATION_VND_3GPP_PROSE_PC3CH_XML = of("application", "vnd.3gpp-prose-pc3ch+xml");
    public final MediaType APPLICATION_VND_3GPP_ACCESS_TRANSFER_EVENTS_XML = of("application", "vnd.3gpp.access-transfer-events+xml");
    public final MediaType APPLICATION_VND_3GPP_BSF_XML = of("application", "vnd.3gpp.bsf+xml");
    public final MediaType APPLICATION_VND_3GPP_MID_CALL_XML = of("application", "vnd.3gpp.mid-call+xml");
    public final MediaType APPLICATION_VND_3GPP_PIC_BW_LARGE = of("application", "vnd.3gpp.pic-bw-large", "plb");
    public final MediaType APPLICATION_VND_3GPP_PIC_BW_SMALL = of("application", "vnd.3gpp.pic-bw-small", "psb");
    public final MediaType APPLICATION_VND_3GPP_PIC_BW_VAR = of("application", "vnd.3gpp.pic-bw-var", "pvb");
    public final MediaType APPLICATION_VND_3GPP_SMS = of("application", "vnd.3gpp.sms");
    public final MediaType APPLICATION_VND_3GPP_SMS_XML = of("application", "vnd.3gpp.sms+xml");
    public final MediaType APPLICATION_VND_3GPP_SRVCC_EXT_XML = of("application", "vnd.3gpp.srvcc-ext+xml");
    public final MediaType APPLICATION_VND_3GPP_SRVCC_INFO_XML = of("application", "vnd.3gpp.srvcc-info+xml");
    public final MediaType APPLICATION_VND_3GPP_STATE_AND_EVENT_INFO_XML = of("application", "vnd.3gpp.state-and-event-info+xml");
    public final MediaType APPLICATION_VND_3GPP_USSD_XML = of("application", "vnd.3gpp.ussd+xml");
    public final MediaType APPLICATION_VND_3GPP2_BCMCSINFO_XML = of("application", "vnd.3gpp2.bcmcsinfo+xml");
    public final MediaType APPLICATION_VND_3GPP2_SMS = of("application", "vnd.3gpp2.sms");
    public final MediaType APPLICATION_VND_3GPP2_TCAP = of("application", "vnd.3gpp2.tcap", "tcap");
    public final MediaType APPLICATION_VND_3LIGHTSSOFTWARE_IMAGESCAL = of("application", "vnd.3lightssoftware.imagescal");
    public final MediaType APPLICATION_VND_3M_POST_IT_NOTES = of("application", "vnd.3m.post-it-notes", "pwn");
    public final MediaType APPLICATION_VND_ACCPAC_SIMPLY_ASO = of("application", "vnd.accpac.simply.aso", "aso");
    public final MediaType APPLICATION_VND_ACCPAC_SIMPLY_IMP = of("application", "vnd.accpac.simply.imp", "imp");
    public final MediaType APPLICATION_VND_ACUCOBOL = of("application", "vnd.acucobol", "acu");
    public final MediaType APPLICATION_VND_ACUCORP = of("application", "vnd.acucorp", "atc", "acutc");
    public final MediaType APPLICATION_VND_ADOBE_AIR_APPLICATION_INSTALLER_PACKAGE_ZIP = of("application", "vnd.adobe.air-application-installer-package+zip", "air");
    public final MediaType APPLICATION_VND_ADOBE_FLASH_MOVIE = of("application", "vnd.adobe.flash.movie");
    public final MediaType APPLICATION_VND_ADOBE_FORMSCENTRAL_FCDT = of("application", "vnd.adobe.formscentral.fcdt", "fcdt");
    public final MediaType APPLICATION_VND_ADOBE_FXP = of("application", "vnd.adobe.fxp", "fxp", "fxpl");
    public final MediaType APPLICATION_VND_ADOBE_PARTIAL_UPLOAD = of("application", "vnd.adobe.partial-upload");
    public final MediaType APPLICATION_VND_ADOBE_XDP_XML = of("application", "vnd.adobe.xdp+xml", "xdp");
    public final MediaType APPLICATION_VND_ADOBE_XFDF = of("application", "vnd.adobe.xfdf", "xfdf");
    public final MediaType APPLICATION_VND_AETHER_IMP = of("application", "vnd.aether.imp");
    public final MediaType APPLICATION_VND_AH_BARCODE = of("application", "vnd.ah-barcode");
    public final MediaType APPLICATION_VND_AHEAD_SPACE = of("application", "vnd.ahead.space", "ahead");
    public final MediaType APPLICATION_VND_AIRZIP_FILESECURE_AZF = of("application", "vnd.airzip.filesecure.azf", "azf");
    public final MediaType APPLICATION_VND_AIRZIP_FILESECURE_AZS = of("application", "vnd.airzip.filesecure.azs", "azs");
    public final MediaType APPLICATION_VND_AMAZON_EBOOK = of("application", "vnd.amazon.ebook", "azw");
    public final MediaType APPLICATION_VND_AMAZON_MOBI8_EBOOK = of("application", "vnd.amazon.mobi8-ebook");
    public final MediaType APPLICATION_VND_AMERICANDYNAMICS_ACC = of("application", "vnd.americandynamics.acc", "acc");
    public final MediaType APPLICATION_VND_AMIGA_AMI = of("application", "vnd.amiga.ami", "ami");
    public final MediaType APPLICATION_VND_AMUNDSEN_MAZE_XML = of("application", "vnd.amundsen.maze+xml");
    public final MediaType APPLICATION_VND_ANDROID_PACKAGE_ARCHIVE = of("application", "vnd.android.package-archive", "apk");
    public final MediaType APPLICATION_VND_ANKI = of("application", "vnd.anki");
    public final MediaType APPLICATION_VND_ANSER_WEB_CERTIFICATE_ISSUE_INITIATION = of("application", "vnd.anser-web-certificate-issue-initiation", "cii");
    public final MediaType APPLICATION_VND_ANSER_WEB_FUNDS_TRANSFER_INITIATION = of("application", "vnd.anser-web-funds-transfer-initiation", "fti");
    public final MediaType APPLICATION_VND_ANTIX_GAME_COMPONENT = of("application", "vnd.antix.game-component", "atx");
    public final MediaType APPLICATION_VND_APACHE_THRIFT_BINARY = of("application", "vnd.apache.thrift.binary");
    public final MediaType APPLICATION_VND_APACHE_THRIFT_COMPACT = of("application", "vnd.apache.thrift.compact");
    public final MediaType APPLICATION_VND_APACHE_THRIFT_JSON = of("application", "vnd.apache.thrift.json");
    public final MediaType APPLICATION_VND_API_JSON = of("application", "vnd.api+json");
    public final MediaType APPLICATION_VND_APPLE_INSTALLER_XML = of("application", "vnd.apple.installer+xml", "mpkg");
    public final MediaType APPLICATION_VND_APPLE_MPEGURL = of("application", "vnd.apple.mpegurl", "m3u8");
    public final MediaType APPLICATION_VND_ARASTRA_SWI = of("application", "vnd.arastra.swi");
    public final MediaType APPLICATION_VND_ARISTANETWORKS_SWI = of("application", "vnd.aristanetworks.swi", "swi");
    public final MediaType APPLICATION_VND_ARTSQUARE = of("application", "vnd.artsquare");
    public final MediaType APPLICATION_VND_ASTRAEA_SOFTWARE_IOTA = of("application", "vnd.astraea-software.iota", "iota");
    public final MediaType APPLICATION_VND_AUDIOGRAPH = of("application", "vnd.audiograph", "aep");
    public final MediaType APPLICATION_VND_AUTOPACKAGE = of("application", "vnd.autopackage");
    public final MediaType APPLICATION_VND_AVISTAR_XML = of("application", "vnd.avistar+xml");
    public final MediaType APPLICATION_VND_BALSAMIQ_BMML_XML = of("application", "vnd.balsamiq.bmml+xml");
    public final MediaType APPLICATION_VND_BALSAMIQ_BMPR = of("application", "vnd.balsamiq.bmpr");
    public final MediaType APPLICATION_VND_BEKITZUR_STECH_JSON = of("application", "vnd.bekitzur-stech+json");
    public final MediaType APPLICATION_VND_BIOPAX_RDF_XML = of("application", "vnd.biopax.rdf+xml");
    public final MediaType APPLICATION_VND_BLUEICE_MULTIPASS = of("application", "vnd.blueice.multipass", "mpm");
    public final MediaType APPLICATION_VND_BLUETOOTH_EP_OOB = of("application", "vnd.bluetooth.ep.oob");
    public final MediaType APPLICATION_VND_BLUETOOTH_LE_OOB = of("application", "vnd.bluetooth.le.oob");
    public final MediaType APPLICATION_VND_BMI = of("application", "vnd.bmi", "bmi");
    public final MediaType APPLICATION_VND_BUSINESSOBJECTS = of("application", "vnd.businessobjects", "rep");
    public final MediaType APPLICATION_VND_CAB_JSCRIPT = of("application", "vnd.cab-jscript");
    public final MediaType APPLICATION_VND_CANON_CPDL = of("application", "vnd.canon-cpdl");
    public final MediaType APPLICATION_VND_CANON_LIPS = of("application", "vnd.canon-lips");
    public final MediaType APPLICATION_VND_CENDIO_THINLINC_CLIENTCONF = of("application", "vnd.cendio.thinlinc.clientconf");
    public final MediaType APPLICATION_VND_CENTURY_SYSTEMS_TCP_STREAM = of("application", "vnd.century-systems.tcp_stream");
    public final MediaType APPLICATION_VND_CHEMDRAW_XML = of("application", "vnd.chemdraw+xml", "cdxml");
    public final MediaType APPLICATION_VND_CHESS_PGN = of("application", "vnd.chess-pgn");
    public final MediaType APPLICATION_VND_CHIPNUTS_KARAOKE_MMD = of("application", "vnd.chipnuts.karaoke-mmd", "mmd");
    public final MediaType APPLICATION_VND_CINDERELLA = of("application", "vnd.cinderella", "cdy");
    public final MediaType APPLICATION_VND_CIRPACK_ISDN_EXT = of("application", "vnd.cirpack.isdn-ext");
    public final MediaType APPLICATION_VND_CITATIONSTYLES_STYLE_XML = of("application", "vnd.citationstyles.style+xml");
    public final MediaType APPLICATION_VND_CLAYMORE = of("application", "vnd.claymore", "cla");
    public final MediaType APPLICATION_VND_CLOANTO_RP9 = of("application", "vnd.cloanto.rp9", "rp9");
    public final MediaType APPLICATION_VND_CLONK_C4GROUP = of("application", "vnd.clonk.c4group", "c4g", "c4d", "c4f", "c4p", "c4u");
    public final MediaType APPLICATION_VND_CLUETRUST_CARTOMOBILE_CONFIG = of("application", "vnd.cluetrust.cartomobile-config", "c11amc");
    public final MediaType APPLICATION_VND_CLUETRUST_CARTOMOBILE_CONFIG_PKG = of("application", "vnd.cluetrust.cartomobile-config-pkg", "c11amz");
    public final MediaType APPLICATION_VND_COFFEESCRIPT = of("application", "vnd.coffeescript");
    public final MediaType APPLICATION_VND_COLLECTION_JSON = of("application", "vnd.collection+json");
    public final MediaType APPLICATION_VND_COLLECTION_DOC_JSON = of("application", "vnd.collection.doc+json");
    public final MediaType APPLICATION_VND_COLLECTION_NEXT_JSON = of("application", "vnd.collection.next+json");
    public final MediaType APPLICATION_VND_COMICBOOK_ZIP = of("application", "vnd.comicbook+zip");
    public final MediaType APPLICATION_VND_COMMERCE_BATTELLE = of("application", "vnd.commerce-battelle");
    public final MediaType APPLICATION_VND_COMMONSPACE = of("application", "vnd.commonspace", "csp");
    public final MediaType APPLICATION_VND_CONTACT_CMSG = of("application", "vnd.contact.cmsg", "cdbcmsg");
    public final MediaType APPLICATION_VND_COREOS_IGNITION_JSON = of("application", "vnd.coreos.ignition+json");
    public final MediaType APPLICATION_VND_COSMOCALLER = of("application", "vnd.cosmocaller", "cmc");
    public final MediaType APPLICATION_VND_CRICK_CLICKER = of("application", "vnd.crick.clicker", "clkx");
    public final MediaType APPLICATION_VND_CRICK_CLICKER_KEYBOARD = of("application", "vnd.crick.clicker.keyboard", "clkk");
    public final MediaType APPLICATION_VND_CRICK_CLICKER_PALETTE = of("application", "vnd.crick.clicker.palette", "clkp");
    public final MediaType APPLICATION_VND_CRICK_CLICKER_TEMPLATE = of("application", "vnd.crick.clicker.template", "clkt");
    public final MediaType APPLICATION_VND_CRICK_CLICKER_WORDBANK = of("application", "vnd.crick.clicker.wordbank", "clkw");
    public final MediaType APPLICATION_VND_CRITICALTOOLS_WBS_XML = of("application", "vnd.criticaltools.wbs+xml", "wbs");
    public final MediaType APPLICATION_VND_CTC_POSML = of("application", "vnd.ctc-posml", "pml");
    public final MediaType APPLICATION_VND_CTCT_WS_XML = of("application", "vnd.ctct.ws+xml");
    public final MediaType APPLICATION_VND_CUPS_PDF = of("application", "vnd.cups-pdf");
    public final MediaType APPLICATION_VND_CUPS_POSTSCRIPT = of("application", "vnd.cups-postscript");
    public final MediaType APPLICATION_VND_CUPS_PPD = of("application", "vnd.cups-ppd", "ppd");
    public final MediaType APPLICATION_VND_CUPS_RASTER = of("application", "vnd.cups-raster");
    public final MediaType APPLICATION_VND_CUPS_RAW = of("application", "vnd.cups-raw");
    public final MediaType APPLICATION_VND_CURL = of("application", "vnd.curl");
    public final MediaType APPLICATION_VND_CURL_CAR = of("application", "vnd.curl.car", "car");
    public final MediaType APPLICATION_VND_CURL_PCURL = of("application", "vnd.curl.pcurl", "pcurl");
    public final MediaType APPLICATION_VND_CYAN_DEAN_ROOT_XML = of("application", "vnd.cyan.dean.root+xml");
    public final MediaType APPLICATION_VND_CYBANK = of("application", "vnd.cybank");
    public final MediaType APPLICATION_VND_DART = of("application", "vnd.dart", "dart");
    public final MediaType APPLICATION_VND_DATA_VISION_RDZ = of("application", "vnd.data-vision.rdz", "rdz");
    public final MediaType APPLICATION_VND_DEBIAN_BINARY_PACKAGE = of("application", "vnd.debian.binary-package");
    public final MediaType APPLICATION_VND_DECE_DATA = of("application", "vnd.dece.data", "uvf", "uvvf", "uvd", "uvvd");
    public final MediaType APPLICATION_VND_DECE_TTML_XML = of("application", "vnd.dece.ttml+xml", "uvt", "uvvt");
    public final MediaType APPLICATION_VND_DECE_UNSPECIFIED = of("application", "vnd.dece.unspecified", "uvx", "uvvx");
    public final MediaType APPLICATION_VND_DECE_ZIP = of("application", "vnd.dece.zip", "uvz", "uvvz");
    public final MediaType APPLICATION_VND_DENOVO_FCSELAYOUT_LINK = of("application", "vnd.denovo.fcselayout-link", "fe_launch");
    public final MediaType APPLICATION_VND_DESMUME_MOVIE = of("application", "vnd.desmume.movie");
    public final MediaType APPLICATION_VND_DIR_BI_PLATE_DL_NOSUFFIX = of("application", "vnd.dir-bi.plate-dl-nosuffix");
    public final MediaType APPLICATION_VND_DM_DELEGATION_XML = of("application", "vnd.dm.delegation+xml");
    public final MediaType APPLICATION_VND_DNA = of("application", "vnd.dna", "dna");
    public final MediaType APPLICATION_VND_DOCUMENT_JSON = of("application", "vnd.document+json");
    public final MediaType APPLICATION_VND_DOLBY_MLP = of("application", "vnd.dolby.mlp", "mlp");
    public final MediaType APPLICATION_VND_DOLBY_MOBILE_1 = of("application", "vnd.dolby.mobile.1");
    public final MediaType APPLICATION_VND_DOLBY_MOBILE_2 = of("application", "vnd.dolby.mobile.2");
    public final MediaType APPLICATION_VND_DOREMIR_SCORECLOUD_BINARY_DOCUMENT = of("application", "vnd.doremir.scorecloud-binary-document");
    public final MediaType APPLICATION_VND_DPGRAPH = of("application", "vnd.dpgraph", "dpg");
    public final MediaType APPLICATION_VND_DREAMFACTORY = of("application", "vnd.dreamfactory", "dfac");
    public final MediaType APPLICATION_VND_DRIVE_JSON = of("application", "vnd.drive+json");
    public final MediaType APPLICATION_VND_DS_KEYPOINT = of("application", "vnd.ds-keypoint", "kpxx");
    public final MediaType APPLICATION_VND_DTG_LOCAL = of("application", "vnd.dtg.local");
    public final MediaType APPLICATION_VND_DTG_LOCAL_FLASH = of("application", "vnd.dtg.local.flash");
    public final MediaType APPLICATION_VND_DTG_LOCAL_HTML = of("application", "vnd.dtg.local.html");
    public final MediaType APPLICATION_VND_DVB_AIT = of("application", "vnd.dvb.ait", "ait");
    public final MediaType APPLICATION_VND_DVB_DVBJ = of("application", "vnd.dvb.dvbj");
    public final MediaType APPLICATION_VND_DVB_ESGCONTAINER = of("application", "vnd.dvb.esgcontainer");
    public final MediaType APPLICATION_VND_DVB_IPDCDFTNOTIFACCESS = of("application", "vnd.dvb.ipdcdftnotifaccess");
    public final MediaType APPLICATION_VND_DVB_IPDCESGACCESS = of("application", "vnd.dvb.ipdcesgaccess");
    public final MediaType APPLICATION_VND_DVB_IPDCESGACCESS2 = of("application", "vnd.dvb.ipdcesgaccess2");
    public final MediaType APPLICATION_VND_DVB_IPDCESGPDD = of("application", "vnd.dvb.ipdcesgpdd");
    public final MediaType APPLICATION_VND_DVB_IPDCROAMING = of("application", "vnd.dvb.ipdcroaming");
    public final MediaType APPLICATION_VND_DVB_IPTV_ALFEC_BASE = of("application", "vnd.dvb.iptv.alfec-base");
    public final MediaType APPLICATION_VND_DVB_IPTV_ALFEC_ENHANCEMENT = of("application", "vnd.dvb.iptv.alfec-enhancement");
    public final MediaType APPLICATION_VND_DVB_NOTIF_AGGREGATE_ROOT_XML = of("application", "vnd.dvb.notif-aggregate-root+xml");
    public final MediaType APPLICATION_VND_DVB_NOTIF_CONTAINER_XML = of("application", "vnd.dvb.notif-container+xml");
    public final MediaType APPLICATION_VND_DVB_NOTIF_GENERIC_XML = of("application", "vnd.dvb.notif-generic+xml");
    public final MediaType APPLICATION_VND_DVB_NOTIF_IA_MSGLIST_XML = of("application", "vnd.dvb.notif-ia-msglist+xml");
    public final MediaType APPLICATION_VND_DVB_NOTIF_IA_REGISTRATION_REQUEST_XML = of("application", "vnd.dvb.notif-ia-registration-request+xml");
    public final MediaType APPLICATION_VND_DVB_NOTIF_IA_REGISTRATION_RESPONSE_XML = of("application", "vnd.dvb.notif-ia-registration-response+xml");
    public final MediaType APPLICATION_VND_DVB_NOTIF_INIT_XML = of("application", "vnd.dvb.notif-init+xml");
    public final MediaType APPLICATION_VND_DVB_PFR = of("application", "vnd.dvb.pfr");
    public final MediaType APPLICATION_VND_DVB_SERVICE = of("application", "vnd.dvb.service", "svc");
    public final MediaType APPLICATION_VND_DXR = of("application", "vnd.dxr");
    public final MediaType APPLICATION_VND_DYNAGEO = of("application", "vnd.dynageo", "geo");
    public final MediaType APPLICATION_VND_DZR = of("application", "vnd.dzr");
    public final MediaType APPLICATION_VND_EASYKARAOKE_CDGDOWNLOAD = of("application", "vnd.easykaraoke.cdgdownload");
    public final MediaType APPLICATION_VND_ECDIS_UPDATE = of("application", "vnd.ecdis-update");
    public final MediaType APPLICATION_VND_ECOWIN_CHART = of("application", "vnd.ecowin.chart", "mag");
    public final MediaType APPLICATION_VND_ECOWIN_FILEREQUEST = of("application", "vnd.ecowin.filerequest");
    public final MediaType APPLICATION_VND_ECOWIN_FILEUPDATE = of("application", "vnd.ecowin.fileupdate");
    public final MediaType APPLICATION_VND_ECOWIN_SERIES = of("application", "vnd.ecowin.series");
    public final MediaType APPLICATION_VND_ECOWIN_SERIESREQUEST = of("application", "vnd.ecowin.seriesrequest");
    public final MediaType APPLICATION_VND_ECOWIN_SERIESUPDATE = of("application", "vnd.ecowin.seriesupdate");
    public final MediaType APPLICATION_VND_EMCLIENT_ACCESSREQUEST_XML = of("application", "vnd.emclient.accessrequest+xml");
    public final MediaType APPLICATION_VND_ENLIVEN = of("application", "vnd.enliven", "nml");
    public final MediaType APPLICATION_VND_ENPHASE_ENVOY = of("application", "vnd.enphase.envoy");
    public final MediaType APPLICATION_VND_EPRINTS_DATA_XML = of("application", "vnd.eprints.data+xml");
    public final MediaType APPLICATION_VND_EPSON_ESF = of("application", "vnd.epson.esf", "esf");
    public final MediaType APPLICATION_VND_EPSON_MSF = of("application", "vnd.epson.msf", "msf");
    public final MediaType APPLICATION_VND_EPSON_QUICKANIME = of("application", "vnd.epson.quickanime", "qam");
    public final MediaType APPLICATION_VND_EPSON_SALT = of("application", "vnd.epson.salt", "slt");
    public final MediaType APPLICATION_VND_EPSON_SSF = of("application", "vnd.epson.ssf", "ssf");
    public final MediaType APPLICATION_VND_ERICSSON_QUICKCALL = of("application", "vnd.ericsson.quickcall");
    public final MediaType APPLICATION_VND_ESZIGNO3_XML = of("application", "vnd.eszigno3+xml", "es3", "et3");
    public final MediaType APPLICATION_VND_ETSI_AOC_XML = of("application", "vnd.etsi.aoc+xml");
    public final MediaType APPLICATION_VND_ETSI_ASIC_E_ZIP = of("application", "vnd.etsi.asic-e+zip");
    public final MediaType APPLICATION_VND_ETSI_ASIC_S_ZIP = of("application", "vnd.etsi.asic-s+zip");
    public final MediaType APPLICATION_VND_ETSI_CUG_XML = of("application", "vnd.etsi.cug+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVCOMMAND_XML = of("application", "vnd.etsi.iptvcommand+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVDISCOVERY_XML = of("application", "vnd.etsi.iptvdiscovery+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVPROFILE_XML = of("application", "vnd.etsi.iptvprofile+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVSAD_BC_XML = of("application", "vnd.etsi.iptvsad-bc+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVSAD_COD_XML = of("application", "vnd.etsi.iptvsad-cod+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVSAD_NPVR_XML = of("application", "vnd.etsi.iptvsad-npvr+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVSERVICE_XML = of("application", "vnd.etsi.iptvservice+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVSYNC_XML = of("application", "vnd.etsi.iptvsync+xml");
    public final MediaType APPLICATION_VND_ETSI_IPTVUEPROFILE_XML = of("application", "vnd.etsi.iptvueprofile+xml");
    public final MediaType APPLICATION_VND_ETSI_MCID_XML = of("application", "vnd.etsi.mcid+xml");
    public final MediaType APPLICATION_VND_ETSI_MHEG5 = of("application", "vnd.etsi.mheg5");
    public final MediaType APPLICATION_VND_ETSI_OVERLOAD_CONTROL_POLICY_DATASET_XML = of("application", "vnd.etsi.overload-control-policy-dataset+xml");
    public final MediaType APPLICATION_VND_ETSI_PSTN_XML = of("application", "vnd.etsi.pstn+xml");
    public final MediaType APPLICATION_VND_ETSI_SCI_XML = of("application", "vnd.etsi.sci+xml");
    public final MediaType APPLICATION_VND_ETSI_SIMSERVS_XML = of("application", "vnd.etsi.simservs+xml");
    public final MediaType APPLICATION_VND_ETSI_TIMESTAMP_TOKEN = of("application", "vnd.etsi.timestamp-token");
    public final MediaType APPLICATION_VND_ETSI_TSL_XML = of("application", "vnd.etsi.tsl+xml");
    public final MediaType APPLICATION_VND_ETSI_TSL_DER = of("application", "vnd.etsi.tsl.der");
    public final MediaType APPLICATION_VND_EUDORA_DATA = of("application", "vnd.eudora.data");
    public final MediaType APPLICATION_VND_EZPIX_ALBUM = of("application", "vnd.ezpix-album", "ez2");
    public final MediaType APPLICATION_VND_EZPIX_PACKAGE = of("application", "vnd.ezpix-package", "ez3");
    public final MediaType APPLICATION_VND_F_SECURE_MOBILE = of("application", "vnd.f-secure.mobile");
    public final MediaType APPLICATION_VND_FASTCOPY_DISK_IMAGE = of("application", "vnd.fastcopy-disk-image");
    public final MediaType APPLICATION_VND_FDF = of("application", "vnd.fdf", "fdf");
    public final MediaType APPLICATION_VND_FDSN_MSEED = of("application", "vnd.fdsn.mseed", "mseed");
    public final MediaType APPLICATION_VND_FDSN_SEED = of("application", "vnd.fdsn.seed", "seed", "dataless");
    public final MediaType APPLICATION_VND_FFSNS = of("application", "vnd.ffsns");
    public final MediaType APPLICATION_VND_FILMIT_ZFC = of("application", "vnd.filmit.zfc");
    public final MediaType APPLICATION_VND_FINTS = of("application", "vnd.fints");
    public final MediaType APPLICATION_VND_FIREMONKEYS_CLOUDCELL = of("application", "vnd.firemonkeys.cloudcell");
    public final MediaType APPLICATION_VND_FLOGRAPHIT = of("application", "vnd.flographit", "gph");
    public final MediaType APPLICATION_VND_FLUXTIME_CLIP = of("application", "vnd.fluxtime.clip", "ftc");
    public final MediaType APPLICATION_VND_FONT_FONTFORGE_SFD = of("application", "vnd.font-fontforge-sfd");
    public final MediaType APPLICATION_VND_FRAMEMAKER = of("application", "vnd.framemaker", "fm", "frame", "maker", "book");
    public final MediaType APPLICATION_VND_FROGANS_FNC = of("application", "vnd.frogans.fnc", "fnc");
    public final MediaType APPLICATION_VND_FROGANS_LTF = of("application", "vnd.frogans.ltf", "ltf");
    public final MediaType APPLICATION_VND_FSC_WEBLAUNCH = of("application", "vnd.fsc.weblaunch", "fsc");
    public final MediaType APPLICATION_VND_FUJITSU_OASYS = of("application", "vnd.fujitsu.oasys", "oas");
    public final MediaType APPLICATION_VND_FUJITSU_OASYS2 = of("application", "vnd.fujitsu.oasys2", "oa2");
    public final MediaType APPLICATION_VND_FUJITSU_OASYS3 = of("application", "vnd.fujitsu.oasys3", "oa3");
    public final MediaType APPLICATION_VND_FUJITSU_OASYSGP = of("application", "vnd.fujitsu.oasysgp", "fg5");
    public final MediaType APPLICATION_VND_FUJITSU_OASYSPRS = of("application", "vnd.fujitsu.oasysprs", "bh2");
    public final MediaType APPLICATION_VND_FUJIXEROX_ART_EX = of("application", "vnd.fujixerox.art-ex");
    public final MediaType APPLICATION_VND_FUJIXEROX_ART4 = of("application", "vnd.fujixerox.art4");
    public final MediaType APPLICATION_VND_FUJIXEROX_DDD = of("application", "vnd.fujixerox.ddd", "ddd");
    public final MediaType APPLICATION_VND_FUJIXEROX_DOCUWORKS = of("application", "vnd.fujixerox.docuworks", "xdw");
    public final MediaType APPLICATION_VND_FUJIXEROX_DOCUWORKS_BINDER = of("application", "vnd.fujixerox.docuworks.binder", "xbd");
    public final MediaType APPLICATION_VND_FUJIXEROX_DOCUWORKS_CONTAINER = of("application", "vnd.fujixerox.docuworks.container");
    public final MediaType APPLICATION_VND_FUJIXEROX_HBPL = of("application", "vnd.fujixerox.hbpl");
    public final MediaType APPLICATION_VND_FUT_MISNET = of("application", "vnd.fut-misnet");
    public final MediaType APPLICATION_VND_FUZZYSHEET = of("application", "vnd.fuzzysheet", "fzs");
    public final MediaType APPLICATION_VND_GENOMATIX_TUXEDO = of("application", "vnd.genomatix.tuxedo", "txd");
    public final MediaType APPLICATION_VND_GEO_JSON = of("application", "vnd.geo+json");
    public final MediaType APPLICATION_VND_GEOCUBE_XML = of("application", "vnd.geocube+xml");
    public final MediaType APPLICATION_VND_GEOGEBRA_FILE = of("application", "vnd.geogebra.file", "ggb");
    public final MediaType APPLICATION_VND_GEOGEBRA_TOOL = of("application", "vnd.geogebra.tool", "ggt");
    public final MediaType APPLICATION_VND_GEOMETRY_EXPLORER = of("application", "vnd.geometry-explorer", "gex", "gre");
    public final MediaType APPLICATION_VND_GEONEXT = of("application", "vnd.geonext", "gxt");
    public final MediaType APPLICATION_VND_GEOPLAN = of("application", "vnd.geoplan", "g2w");
    public final MediaType APPLICATION_VND_GEOSPACE = of("application", "vnd.geospace", "g3w");
    public final MediaType APPLICATION_VND_GERBER = of("application", "vnd.gerber");
    public final MediaType APPLICATION_VND_GLOBALPLATFORM_CARD_CONTENT_MGT = of("application", "vnd.globalplatform.card-content-mgt");
    public final MediaType APPLICATION_VND_GLOBALPLATFORM_CARD_CONTENT_MGT_RESPONSE = of("application", "vnd.globalplatform.card-content-mgt-response");
    public final MediaType APPLICATION_VND_GMX = of("application", "vnd.gmx", "gmx");
    public final MediaType APPLICATION_VND_GOOGLE_EARTH_KML_XML = of("application", "vnd.google-earth.kml+xml", "kml");
    public final MediaType APPLICATION_VND_GOOGLE_EARTH_KMZ = of("application", "vnd.google-earth.kmz", "kmz");
    public final MediaType APPLICATION_VND_GOV_SK_E_FORM_XML = of("application", "vnd.gov.sk.e-form+xml");
    public final MediaType APPLICATION_VND_GOV_SK_E_FORM_ZIP = of("application", "vnd.gov.sk.e-form+zip");
    public final MediaType APPLICATION_VND_GOV_SK_XMLDATACONTAINER_XML = of("application", "vnd.gov.sk.xmldatacontainer+xml");
    public final MediaType APPLICATION_VND_GRAFEQ = of("application", "vnd.grafeq", "gqf", "gqs");
    public final MediaType APPLICATION_VND_GRIDMP = of("application", "vnd.gridmp");
    public final MediaType APPLICATION_VND_GROOVE_ACCOUNT = of("application", "vnd.groove-account", "gac");
    public final MediaType APPLICATION_VND_GROOVE_HELP = of("application", "vnd.groove-help", "ghf");
    public final MediaType APPLICATION_VND_GROOVE_IDENTITY_MESSAGE = of("application", "vnd.groove-identity-message", "gim");
    public final MediaType APPLICATION_VND_GROOVE_INJECTOR = of("application", "vnd.groove-injector", "grv");
    public final MediaType APPLICATION_VND_GROOVE_TOOL_MESSAGE = of("application", "vnd.groove-tool-message", "gtm");
    public final MediaType APPLICATION_VND_GROOVE_TOOL_TEMPLATE = of("application", "vnd.groove-tool-template", "tpl");
    public final MediaType APPLICATION_VND_GROOVE_VCARD = of("application", "vnd.groove-vcard", "vcg");
    public final MediaType APPLICATION_VND_HAL_JSON = of("application", "vnd.hal+json");
    public final MediaType APPLICATION_VND_HAL_XML = of("application", "vnd.hal+xml", "hal");
    public final MediaType APPLICATION_VND_HANDHELD_ENTERTAINMENT_XML = of("application", "vnd.handheld-entertainment+xml", "zmm");
    public final MediaType APPLICATION_VND_HBCI = of("application", "vnd.hbci", "hbci");
    public final MediaType APPLICATION_VND_HCL_BIREPORTS = of("application", "vnd.hcl-bireports");
    public final MediaType APPLICATION_VND_HDT = of("application", "vnd.hdt");
    public final MediaType APPLICATION_VND_HEROKU_JSON = of("application", "vnd.heroku+json");
    public final MediaType APPLICATION_VND_HHE_LESSON_PLAYER = of("application", "vnd.hhe.lesson-player", "les");
    public final MediaType APPLICATION_VND_HP_HPGL = of("application", "vnd.hp-hpgl", "hpgl");
    public final MediaType APPLICATION_VND_HP_HPID = of("application", "vnd.hp-hpid", "hpid");
    public final MediaType APPLICATION_VND_HP_HPS = of("application", "vnd.hp-hps", "hps");
    public final MediaType APPLICATION_VND_HP_JLYT = of("application", "vnd.hp-jlyt", "jlt");
    public final MediaType APPLICATION_VND_HP_PCL = of("application", "vnd.hp-pcl", "pcl");
    public final MediaType APPLICATION_VND_HP_PCLXL = of("application", "vnd.hp-pclxl", "pclxl");
    public final MediaType APPLICATION_VND_HTTPHONE = of("application", "vnd.httphone");
    public final MediaType APPLICATION_VND_HYDROSTATIX_SOF_DATA = of("application", "vnd.hydrostatix.sof-data", "sfd-hdstx");
    public final MediaType APPLICATION_VND_HYPERDRIVE_JSON = of("application", "vnd.hyperdrive+json");
    public final MediaType APPLICATION_VND_HZN_3D_CROSSWORD = of("application", "vnd.hzn-3d-crossword");
    public final MediaType APPLICATION_VND_IBM_AFPLINEDATA = of("application", "vnd.ibm.afplinedata");
    public final MediaType APPLICATION_VND_IBM_ELECTRONIC_MEDIA = of("application", "vnd.ibm.electronic-media");
    public final MediaType APPLICATION_VND_IBM_MINIPAY = of("application", "vnd.ibm.minipay", "mpy");
    public final MediaType APPLICATION_VND_IBM_MODCAP = of("application", "vnd.ibm.modcap", "afp", "listafp", "list3820");
    public final MediaType APPLICATION_VND_IBM_RIGHTS_MANAGEMENT = of("application", "vnd.ibm.rights-management", "irm");
    public final MediaType APPLICATION_VND_IBM_SECURE_CONTAINER = of("application", "vnd.ibm.secure-container", "sc");
    public final MediaType APPLICATION_VND_ICCPROFILE = of("application", "vnd.iccprofile", "icc", "icm");
    public final MediaType APPLICATION_VND_IEEE_1905 = of("application", "vnd.ieee.1905");
    public final MediaType APPLICATION_VND_IGLOADER = of("application", "vnd.igloader", "igl");
    public final MediaType APPLICATION_VND_IMMERVISION_IVP = of("application", "vnd.immervision-ivp", "ivp");
    public final MediaType APPLICATION_VND_IMMERVISION_IVU = of("application", "vnd.immervision-ivu", "ivu");
    public final MediaType APPLICATION_VND_IMS_IMSCCV1P1 = of("application", "vnd.ims.imsccv1p1");
    public final MediaType APPLICATION_VND_IMS_IMSCCV1P2 = of("application", "vnd.ims.imsccv1p2");
    public final MediaType APPLICATION_VND_IMS_IMSCCV1P3 = of("application", "vnd.ims.imsccv1p3");
    public final MediaType APPLICATION_VND_IMS_LIS_V2_RESULT_JSON = of("application", "vnd.ims.lis.v2.result+json");
    public final MediaType APPLICATION_VND_IMS_LTI_V2_TOOLCONSUMERPROFILE_JSON = of("application", "vnd.ims.lti.v2.toolconsumerprofile+json");
    public final MediaType APPLICATION_VND_IMS_LTI_V2_TOOLPROXY_JSON = of("application", "vnd.ims.lti.v2.toolproxy+json");
    public final MediaType APPLICATION_VND_IMS_LTI_V2_TOOLPROXY_ID_JSON = of("application", "vnd.ims.lti.v2.toolproxy.id+json");
    public final MediaType APPLICATION_VND_IMS_LTI_V2_TOOLSETTINGS_JSON = of("application", "vnd.ims.lti.v2.toolsettings+json");
    public final MediaType APPLICATION_VND_IMS_LTI_V2_TOOLSETTINGS_SIMPLE_JSON = of("application", "vnd.ims.lti.v2.toolsettings.simple+json");
    public final MediaType APPLICATION_VND_INFORMEDCONTROL_RMS_XML = of("application", "vnd.informedcontrol.rms+xml");
    public final MediaType APPLICATION_VND_INFORMIX_VISIONARY = of("application", "vnd.informix-visionary");
    public final MediaType APPLICATION_VND_INFOTECH_PROJECT = of("application", "vnd.infotech.project");
    public final MediaType APPLICATION_VND_INFOTECH_PROJECT_XML = of("application", "vnd.infotech.project+xml");
    public final MediaType APPLICATION_VND_INNOPATH_WAMP_NOTIFICATION = of("application", "vnd.innopath.wamp.notification");
    public final MediaType APPLICATION_VND_INSORS_IGM = of("application", "vnd.insors.igm", "igm");
    public final MediaType APPLICATION_VND_INTERCON_FORMNET = of("application", "vnd.intercon.formnet", "xpw", "xpx");
    public final MediaType APPLICATION_VND_INTERGEO = of("application", "vnd.intergeo", "i2g");
    public final MediaType APPLICATION_VND_INTERTRUST_DIGIBOX = of("application", "vnd.intertrust.digibox");
    public final MediaType APPLICATION_VND_INTERTRUST_NNCP = of("application", "vnd.intertrust.nncp");
    public final MediaType APPLICATION_VND_INTU_QBO = of("application", "vnd.intu.qbo", "qbo");
    public final MediaType APPLICATION_VND_INTU_QFX = of("application", "vnd.intu.qfx", "qfx");
    public final MediaType APPLICATION_VND_IPTC_G2_CATALOGITEM_XML = of("application", "vnd.iptc.g2.catalogitem+xml");
    public final MediaType APPLICATION_VND_IPTC_G2_CONCEPTITEM_XML = of("application", "vnd.iptc.g2.conceptitem+xml");
    public final MediaType APPLICATION_VND_IPTC_G2_KNOWLEDGEITEM_XML = of("application", "vnd.iptc.g2.knowledgeitem+xml");
    public final MediaType APPLICATION_VND_IPTC_G2_NEWSITEM_XML = of("application", "vnd.iptc.g2.newsitem+xml");
    public final MediaType APPLICATION_VND_IPTC_G2_NEWSMESSAGE_XML = of("application", "vnd.iptc.g2.newsmessage+xml");
    public final MediaType APPLICATION_VND_IPTC_G2_PACKAGEITEM_XML = of("application", "vnd.iptc.g2.packageitem+xml");
    public final MediaType APPLICATION_VND_IPTC_G2_PLANNINGITEM_XML = of("application", "vnd.iptc.g2.planningitem+xml");
    public final MediaType APPLICATION_VND_IPUNPLUGGED_RCPROFILE = of("application", "vnd.ipunplugged.rcprofile", "rcprofile");
    public final MediaType APPLICATION_VND_IREPOSITORY_PACKAGE_XML = of("application", "vnd.irepository.package+xml", "irp");
    public final MediaType APPLICATION_VND_IS_XPR = of("application", "vnd.is-xpr", "xpr");
    public final MediaType APPLICATION_VND_ISAC_FCS = of("application", "vnd.isac.fcs", "fcs");
    public final MediaType APPLICATION_VND_JAM = of("application", "vnd.jam", "jam");
    public final MediaType APPLICATION_VND_JAPANNET_DIRECTORY_SERVICE = of("application", "vnd.japannet-directory-service");
    public final MediaType APPLICATION_VND_JAPANNET_JPNSTORE_WAKEUP = of("application", "vnd.japannet-jpnstore-wakeup");
    public final MediaType APPLICATION_VND_JAPANNET_PAYMENT_WAKEUP = of("application", "vnd.japannet-payment-wakeup");
    public final MediaType APPLICATION_VND_JAPANNET_REGISTRATION = of("application", "vnd.japannet-registration");
    public final MediaType APPLICATION_VND_JAPANNET_REGISTRATION_WAKEUP = of("application", "vnd.japannet-registration-wakeup");
    public final MediaType APPLICATION_VND_JAPANNET_SETSTORE_WAKEUP = of("application", "vnd.japannet-setstore-wakeup");
    public final MediaType APPLICATION_VND_JAPANNET_VERIFICATION = of("application", "vnd.japannet-verification");
    public final MediaType APPLICATION_VND_JAPANNET_VERIFICATION_WAKEUP = of("application", "vnd.japannet-verification-wakeup");
    public final MediaType APPLICATION_VND_JCP_JAVAME_MIDLET_RMS = of("application", "vnd.jcp.javame.midlet-rms", "rms");
    public final MediaType APPLICATION_VND_JISP = of("application", "vnd.jisp", "jisp");
    public final MediaType APPLICATION_VND_JOOST_JODA_ARCHIVE = of("application", "vnd.joost.joda-archive", "joda");
    public final MediaType APPLICATION_VND_JSK_ISDN_NGN = of("application", "vnd.jsk.isdn-ngn");
    public final MediaType APPLICATION_VND_KAHOOTZ = of("application", "vnd.kahootz", "ktz", "ktr");
    public final MediaType APPLICATION_VND_KDE_KARBON = of("application", "vnd.kde.karbon", "karbon");
    public final MediaType APPLICATION_VND_KDE_KCHART = of("application", "vnd.kde.kchart", "chrt");
    public final MediaType APPLICATION_VND_KDE_KFORMULA = of("application", "vnd.kde.kformula", "kfo");
    public final MediaType APPLICATION_VND_KDE_KIVIO = of("application", "vnd.kde.kivio", "flw");
    public final MediaType APPLICATION_VND_KDE_KONTOUR = of("application", "vnd.kde.kontour", "kon");
    public final MediaType APPLICATION_VND_KDE_KPRESENTER = of("application", "vnd.kde.kpresenter", "kpr", "kpt");
    public final MediaType APPLICATION_VND_KDE_KSPREAD = of("application", "vnd.kde.kspread", "ksp");
    public final MediaType APPLICATION_VND_KDE_KWORD = of("application", "vnd.kde.kword", "kwd", "kwt");
    public final MediaType APPLICATION_VND_KENAMEAAPP = of("application", "vnd.kenameaapp", "htke");
    public final MediaType APPLICATION_VND_KIDSPIRATION = of("application", "vnd.kidspiration", "kia");
    public final MediaType APPLICATION_VND_KINAR = of("application", "vnd.kinar", "kne", "knp");
    public final MediaType APPLICATION_VND_KOAN = of("application", "vnd.koan", "skp", "skd", "skt", "skm");
    public final MediaType APPLICATION_VND_KODAK_DESCRIPTOR = of("application", "vnd.kodak-descriptor", "sse");
    public final MediaType APPLICATION_VND_LAS_LAS_XML = of("application", "vnd.las.las+xml", "lasxml");
    public final MediaType APPLICATION_VND_LIBERTY_REQUEST_XML = of("application", "vnd.liberty-request+xml");
    public final MediaType APPLICATION_VND_LLAMAGRAPHICS_LIFE_BALANCE_DESKTOP = of("application", "vnd.llamagraphics.life-balance.desktop", "lbd");
    public final MediaType APPLICATION_VND_LLAMAGRAPHICS_LIFE_BALANCE_EXCHANGE_XML = of("application", "vnd.llamagraphics.life-balance.exchange+xml", "lbe");
    public final MediaType APPLICATION_VND_LOTUS_1_2_3 = of("application", "vnd.lotus-1-2-3", "123");
    public final MediaType APPLICATION_VND_LOTUS_APPROACH = of("application", "vnd.lotus-approach", "apr");
    public final MediaType APPLICATION_VND_LOTUS_FREELANCE = of("application", "vnd.lotus-freelance", "pre");
    public final MediaType APPLICATION_VND_LOTUS_NOTES = of("application", "vnd.lotus-notes", "nsf");
    public final MediaType APPLICATION_VND_LOTUS_ORGANIZER = of("application", "vnd.lotus-organizer", "org");
    public final MediaType APPLICATION_VND_LOTUS_SCREENCAM = of("application", "vnd.lotus-screencam", "scm");
    public final MediaType APPLICATION_VND_LOTUS_WORDPRO = of("application", "vnd.lotus-wordpro", "lwp");
    public final MediaType APPLICATION_VND_MACPORTS_PORTPKG = of("application", "vnd.macports.portpkg", "portpkg");
    public final MediaType APPLICATION_VND_MAPBOX_VECTOR_TILE = of("application", "vnd.mapbox-vector-tile");
    public final MediaType APPLICATION_VND_MARLIN_DRM_ACTIONTOKEN_XML = of("application", "vnd.marlin.drm.actiontoken+xml");
    public final MediaType APPLICATION_VND_MARLIN_DRM_CONFTOKEN_XML = of("application", "vnd.marlin.drm.conftoken+xml");
    public final MediaType APPLICATION_VND_MARLIN_DRM_LICENSE_XML = of("application", "vnd.marlin.drm.license+xml");
    public final MediaType APPLICATION_VND_MARLIN_DRM_MDCF = of("application", "vnd.marlin.drm.mdcf");
    public final MediaType APPLICATION_VND_MASON_JSON = of("application", "vnd.mason+json");
    public final MediaType APPLICATION_VND_MAXMIND_MAXMIND_DB = of("application", "vnd.maxmind.maxmind-db");
    public final MediaType APPLICATION_VND_MCD = of("application", "vnd.mcd", "mcd");
    public final MediaType APPLICATION_VND_MEDCALCDATA = of("application", "vnd.medcalcdata", "mc1");
    public final MediaType APPLICATION_VND_MEDIASTATION_CDKEY = of("application", "vnd.mediastation.cdkey", "cdkey");
    public final MediaType APPLICATION_VND_MERIDIAN_SLINGSHOT = of("application", "vnd.meridian-slingshot");
    public final MediaType APPLICATION_VND_MFER = of("application", "vnd.mfer", "mwf");
    public final MediaType APPLICATION_VND_MFMP = of("application", "vnd.mfmp", "mfm");
    public final MediaType APPLICATION_VND_MICRO_JSON = of("application", "vnd.micro+json");
    public final MediaType APPLICATION_VND_MICROGRAFX_FLO = of("application", "vnd.micrografx.flo", "flo");
    public final MediaType APPLICATION_VND_MICROGRAFX_IGX = of("application", "vnd.micrografx.igx", "igx");
    public final MediaType APPLICATION_VND_MICROSOFT_PORTABLE_EXECUTABLE = of("application", "vnd.microsoft.portable-executable");
    public final MediaType APPLICATION_VND_MIELE_JSON = of("application", "vnd.miele+json");
    public final MediaType APPLICATION_VND_MIF = of("application", "vnd.mif", "mif");
    public final MediaType APPLICATION_VND_MINISOFT_HP3000_SAVE = of("application", "vnd.minisoft-hp3000-save");
    public final MediaType APPLICATION_VND_MITSUBISHI_MISTY_GUARD_TRUSTWEB = of("application", "vnd.mitsubishi.misty-guard.trustweb");
    public final MediaType APPLICATION_VND_MOBIUS_DAF = of("application", "vnd.mobius.daf", "daf");
    public final MediaType APPLICATION_VND_MOBIUS_DIS = of("application", "vnd.mobius.dis", "dis");
    public final MediaType APPLICATION_VND_MOBIUS_MBK = of("application", "vnd.mobius.mbk", "mbk");
    public final MediaType APPLICATION_VND_MOBIUS_MQY = of("application", "vnd.mobius.mqy", "mqy");
    public final MediaType APPLICATION_VND_MOBIUS_MSL = of("application", "vnd.mobius.msl", "msl");
    public final MediaType APPLICATION_VND_MOBIUS_PLC = of("application", "vnd.mobius.plc", "plc");
    public final MediaType APPLICATION_VND_MOBIUS_TXF = of("application", "vnd.mobius.txf", "txf");
    public final MediaType APPLICATION_VND_MOPHUN_APPLICATION = of("application", "vnd.mophun.application", "mpn");
    public final MediaType APPLICATION_VND_MOPHUN_CERTIFICATE = of("application", "vnd.mophun.certificate", "mpc");
    public final MediaType APPLICATION_VND_MOTOROLA_FLEXSUITE = of("application", "vnd.motorola.flexsuite");
    public final MediaType APPLICATION_VND_MOTOROLA_FLEXSUITE_ADSI = of("application", "vnd.motorola.flexsuite.adsi");
    public final MediaType APPLICATION_VND_MOTOROLA_FLEXSUITE_FIS = of("application", "vnd.motorola.flexsuite.fis");
    public final MediaType APPLICATION_VND_MOTOROLA_FLEXSUITE_GOTAP = of("application", "vnd.motorola.flexsuite.gotap");
    public final MediaType APPLICATION_VND_MOTOROLA_FLEXSUITE_KMR = of("application", "vnd.motorola.flexsuite.kmr");
    public final MediaType APPLICATION_VND_MOTOROLA_FLEXSUITE_TTC = of("application", "vnd.motorola.flexsuite.ttc");
    public final MediaType APPLICATION_VND_MOTOROLA_FLEXSUITE_WEM = of("application", "vnd.motorola.flexsuite.wem");
    public final MediaType APPLICATION_VND_MOTOROLA_IPRM = of("application", "vnd.motorola.iprm");
    public final MediaType APPLICATION_VND_MOZILLA_XUL_XML = of("application", "vnd.mozilla.xul+xml", "xul");
    public final MediaType APPLICATION_VND_MS_3MFDOCUMENT = of("application", "vnd.ms-3mfdocument");
    public final MediaType APPLICATION_VND_MS_ARTGALRY = of("application", "vnd.ms-artgalry", "cil");
    public final MediaType APPLICATION_VND_MS_ASF = of("application", "vnd.ms-asf");
    public final MediaType APPLICATION_VND_MS_CAB_COMPRESSED = of("application", "vnd.ms-cab-compressed", "cab");
    public final MediaType APPLICATION_VND_MS_COLOR_ICCPROFILE = of("application", "vnd.ms-color.iccprofile");
    public final MediaType APPLICATION_VND_MS_EXCEL = of("application", "vnd.ms-excel", "xls", "xlm", "xla", "xlc", "xlt", "xlw");
    public final MediaType APPLICATION_VND_MS_EXCEL_ADDIN_MACROENABLED_12 = of("application", "vnd.ms-excel.addin.macroenabled.12", "xlam");
    public final MediaType APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACROENABLED_12 = of("application", "vnd.ms-excel.sheet.binary.macroenabled.12", "xlsb");
    public final MediaType APPLICATION_VND_MS_EXCEL_SHEET_MACROENABLED_12 = of("application", "vnd.ms-excel.sheet.macroenabled.12", "xlsm");
    public final MediaType APPLICATION_VND_MS_EXCEL_TEMPLATE_MACROENABLED_12 = of("application", "vnd.ms-excel.template.macroenabled.12", "xltm");
    public final MediaType APPLICATION_VND_MS_FONTOBJECT = of("application", "vnd.ms-fontobject", "eot");
    public final MediaType APPLICATION_VND_MS_HTMLHELP = of("application", "vnd.ms-htmlhelp", "chm");
    public final MediaType APPLICATION_VND_MS_IMS = of("application", "vnd.ms-ims", "ims");
    public final MediaType APPLICATION_VND_MS_LRM = of("application", "vnd.ms-lrm", "lrm");
    public final MediaType APPLICATION_VND_MS_OFFICE_ACTIVEX_XML = of("application", "vnd.ms-office.activex+xml");
    public final MediaType APPLICATION_VND_MS_OFFICETHEME = of("application", "vnd.ms-officetheme", "thmx");
    public final MediaType APPLICATION_VND_MS_OPENTYPE = of("application", "vnd.ms-opentype");
    public final MediaType APPLICATION_VND_MS_PACKAGE_OBFUSCATED_OPENTYPE = of("application", "vnd.ms-package.obfuscated-opentype");
    public final MediaType APPLICATION_VND_MS_PKI_SECCAT = of("application", "vnd.ms-pki.seccat", "cat");
    public final MediaType APPLICATION_VND_MS_PKI_STL = of("application", "vnd.ms-pki.stl", "stl");
    public final MediaType APPLICATION_VND_MS_PLAYREADY_INITIATOR_XML = of("application", "vnd.ms-playready.initiator+xml");
    public final MediaType APPLICATION_VND_MS_POWERPOINT = of("application", "vnd.ms-powerpoint", "ppt", "pps", "pot");
    public final MediaType APPLICATION_VND_MS_POWERPOINT_ADDIN_MACROENABLED_12 = of("application", "vnd.ms-powerpoint.addin.macroenabled.12", "ppam");
    public final MediaType APPLICATION_VND_MS_POWERPOINT_PRESENTATION_MACROENABLED_12 = of("application", "vnd.ms-powerpoint.presentation.macroenabled.12", "pptm");
    public final MediaType APPLICATION_VND_MS_POWERPOINT_SLIDE_MACROENABLED_12 = of("application", "vnd.ms-powerpoint.slide.macroenabled.12", "sldm");
    public final MediaType APPLICATION_VND_MS_POWERPOINT_SLIDESHOW_MACROENABLED_12 = of("application", "vnd.ms-powerpoint.slideshow.macroenabled.12", "ppsm");
    public final MediaType APPLICATION_VND_MS_POWERPOINT_TEMPLATE_MACROENABLED_12 = of("application", "vnd.ms-powerpoint.template.macroenabled.12", "potm");
    public final MediaType APPLICATION_VND_MS_PRINTDEVICECAPABILITIES_XML = of("application", "vnd.ms-printdevicecapabilities+xml");
    public final MediaType APPLICATION_VND_MS_PRINTING_PRINTTICKET_XML = of("application", "vnd.ms-printing.printticket+xml");
    public final MediaType APPLICATION_VND_MS_PRINTSCHEMATICKET_XML = of("application", "vnd.ms-printschematicket+xml");
    public final MediaType APPLICATION_VND_MS_PROJECT = of("application", "vnd.ms-project", "mpp", "mpt");
    public final MediaType APPLICATION_VND_MS_TNEF = of("application", "vnd.ms-tnef");
    public final MediaType APPLICATION_VND_MS_WINDOWS_DEVICEPAIRING = of("application", "vnd.ms-windows.devicepairing");
    public final MediaType APPLICATION_VND_MS_WINDOWS_NWPRINTING_OOB = of("application", "vnd.ms-windows.nwprinting.oob");
    public final MediaType APPLICATION_VND_MS_WINDOWS_PRINTERPAIRING = of("application", "vnd.ms-windows.printerpairing");
    public final MediaType APPLICATION_VND_MS_WINDOWS_WSD_OOB = of("application", "vnd.ms-windows.wsd.oob");
    public final MediaType APPLICATION_VND_MS_WMDRM_LIC_CHLG_REQ = of("application", "vnd.ms-wmdrm.lic-chlg-req");
    public final MediaType APPLICATION_VND_MS_WMDRM_LIC_RESP = of("application", "vnd.ms-wmdrm.lic-resp");
    public final MediaType APPLICATION_VND_MS_WMDRM_METER_CHLG_REQ = of("application", "vnd.ms-wmdrm.meter-chlg-req");
    public final MediaType APPLICATION_VND_MS_WMDRM_METER_RESP = of("application", "vnd.ms-wmdrm.meter-resp");
    public final MediaType APPLICATION_VND_MS_WORD_DOCUMENT_MACROENABLED_12 = of("application", "vnd.ms-word.document.macroenabled.12", "docm");
    public final MediaType APPLICATION_VND_MS_WORD_TEMPLATE_MACROENABLED_12 = of("application", "vnd.ms-word.template.macroenabled.12", "dotm");
    public final MediaType APPLICATION_VND_MS_WORKS = of("application", "vnd.ms-works", "wps", "wks", "wcm", "wdb");
    public final MediaType APPLICATION_VND_MS_WPL = of("application", "vnd.ms-wpl", "wpl");
    public final MediaType APPLICATION_VND_MS_XPSDOCUMENT = of("application", "vnd.ms-xpsdocument", "xps");
    public final MediaType APPLICATION_VND_MSA_DISK_IMAGE = of("application", "vnd.msa-disk-image");
    public final MediaType APPLICATION_VND_MSEQ = of("application", "vnd.mseq", "mseq");
    public final MediaType APPLICATION_VND_MSIGN = of("application", "vnd.msign");
    public final MediaType APPLICATION_VND_MULTIAD_CREATOR = of("application", "vnd.multiad.creator");
    public final MediaType APPLICATION_VND_MULTIAD_CREATOR_CIF = of("application", "vnd.multiad.creator.cif");
    public final MediaType APPLICATION_VND_MUSIC_NIFF = of("application", "vnd.music-niff");
    public final MediaType APPLICATION_VND_MUSICIAN = of("application", "vnd.musician", "mus");
    public final MediaType APPLICATION_VND_MUVEE_STYLE = of("application", "vnd.muvee.style", "msty");
    public final MediaType APPLICATION_VND_MYNFC = of("application", "vnd.mynfc", "taglet");
    public final MediaType APPLICATION_VND_NCD_CONTROL = of("application", "vnd.ncd.control");
    public final MediaType APPLICATION_VND_NCD_REFERENCE = of("application", "vnd.ncd.reference");
    public final MediaType APPLICATION_VND_NERVANA = of("application", "vnd.nervana");
    public final MediaType APPLICATION_VND_NETFPX = of("application", "vnd.netfpx");
    public final MediaType APPLICATION_VND_NEUROLANGUAGE_NLU = of("application", "vnd.neurolanguage.nlu", "nlu");
    public final MediaType APPLICATION_VND_NINTENDO_NITRO_ROM = of("application", "vnd.nintendo.nitro.rom");
    public final MediaType APPLICATION_VND_NINTENDO_SNES_ROM = of("application", "vnd.nintendo.snes.rom");
    public final MediaType APPLICATION_VND_NITF = of("application", "vnd.nitf", "ntf", "nitf");
    public final MediaType APPLICATION_VND_NOBLENET_DIRECTORY = of("application", "vnd.noblenet-directory", "nnd");
    public final MediaType APPLICATION_VND_NOBLENET_SEALER = of("application", "vnd.noblenet-sealer", "nns");
    public final MediaType APPLICATION_VND_NOBLENET_WEB = of("application", "vnd.noblenet-web", "nnw");
    public final MediaType APPLICATION_VND_NOKIA_CATALOGS = of("application", "vnd.nokia.catalogs");
    public final MediaType APPLICATION_VND_NOKIA_CONML_WBXML = of("application", "vnd.nokia.conml+wbxml");
    public final MediaType APPLICATION_VND_NOKIA_CONML_XML = of("application", "vnd.nokia.conml+xml");
    public final MediaType APPLICATION_VND_NOKIA_IPTV_CONFIG_XML = of("application", "vnd.nokia.iptv.config+xml");
    public final MediaType APPLICATION_VND_NOKIA_ISDS_RADIO_PRESETS = of("application", "vnd.nokia.isds-radio-presets");
    public final MediaType APPLICATION_VND_NOKIA_LANDMARK_WBXML = of("application", "vnd.nokia.landmark+wbxml");
    public final MediaType APPLICATION_VND_NOKIA_LANDMARK_XML = of("application", "vnd.nokia.landmark+xml");
    public final MediaType APPLICATION_VND_NOKIA_LANDMARKCOLLECTION_XML = of("application", "vnd.nokia.landmarkcollection+xml");
    public final MediaType APPLICATION_VND_NOKIA_N_GAGE_AC_XML = of("application", "vnd.nokia.n-gage.ac+xml");
    public final MediaType APPLICATION_VND_NOKIA_N_GAGE_DATA = of("application", "vnd.nokia.n-gage.data", "ngdat");
    public final MediaType APPLICATION_VND_NOKIA_N_GAGE_SYMBIAN_INSTALL = of("application", "vnd.nokia.n-gage.symbian.install", "n-gage");
    public final MediaType APPLICATION_VND_NOKIA_NCD = of("application", "vnd.nokia.ncd");
    public final MediaType APPLICATION_VND_NOKIA_PCD_WBXML = of("application", "vnd.nokia.pcd+wbxml");
    public final MediaType APPLICATION_VND_NOKIA_PCD_XML = of("application", "vnd.nokia.pcd+xml");
    public final MediaType APPLICATION_VND_NOKIA_RADIO_PRESET = of("application", "vnd.nokia.radio-preset", "rpst");
    public final MediaType APPLICATION_VND_NOKIA_RADIO_PRESETS = of("application", "vnd.nokia.radio-presets", "rpss");
    public final MediaType APPLICATION_VND_NOVADIGM_EDM = of("application", "vnd.novadigm.edm", "edm");
    public final MediaType APPLICATION_VND_NOVADIGM_EDX = of("application", "vnd.novadigm.edx", "edx");
    public final MediaType APPLICATION_VND_NOVADIGM_EXT = of("application", "vnd.novadigm.ext", "ext");
    public final MediaType APPLICATION_VND_NTT_LOCAL_CONTENT_SHARE = of("application", "vnd.ntt-local.content-share");
    public final MediaType APPLICATION_VND_NTT_LOCAL_FILE_TRANSFER = of("application", "vnd.ntt-local.file-transfer");
    public final MediaType APPLICATION_VND_NTT_LOCAL_OGW_REMOTE_ACCESS = of("application", "vnd.ntt-local.ogw_remote-access");
    public final MediaType APPLICATION_VND_NTT_LOCAL_SIP_TA_REMOTE = of("application", "vnd.ntt-local.sip-ta_remote");
    public final MediaType APPLICATION_VND_NTT_LOCAL_SIP_TA_TCP_STREAM = of("application", "vnd.ntt-local.sip-ta_tcp_stream");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_CHART = of("application", "vnd.oasis.opendocument.chart", "odc");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_CHART_TEMPLATE = of("application", "vnd.oasis.opendocument.chart-template", "otc");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_DATABASE = of("application", "vnd.oasis.opendocument.database", "odb");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA = of("application", "vnd.oasis.opendocument.formula", "odf");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA_TEMPLATE = of("application", "vnd.oasis.opendocument.formula-template", "odft");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS = of("application", "vnd.oasis.opendocument.graphics", "odg");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS_TEMPLATE = of("application", "vnd.oasis.opendocument.graphics-template", "otg");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_IMAGE = of("application", "vnd.oasis.opendocument.image", "odi");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_IMAGE_TEMPLATE = of("application", "vnd.oasis.opendocument.image-template", "oti");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION = of("application", "vnd.oasis.opendocument.presentation", "odp");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION_TEMPLATE = of("application", "vnd.oasis.opendocument.presentation-template", "otp");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET = of("application", "vnd.oasis.opendocument.spreadsheet", "ods");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET_TEMPLATE = of("application", "vnd.oasis.opendocument.spreadsheet-template", "ots");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT = of("application", "vnd.oasis.opendocument.text", "odt");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_MASTER = of("application", "vnd.oasis.opendocument.text-master", "odm");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_TEMPLATE = of("application", "vnd.oasis.opendocument.text-template", "ott");
    public final MediaType APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_WEB = of("application", "vnd.oasis.opendocument.text-web", "oth");
    public final MediaType APPLICATION_VND_OBN = of("application", "vnd.obn");
    public final MediaType APPLICATION_VND_OFTN_L10N_JSON = of("application", "vnd.oftn.l10n+json");
    public final MediaType APPLICATION_VND_OIPF_CONTENTACCESSDOWNLOAD_XML = of("application", "vnd.oipf.contentaccessdownload+xml");
    public final MediaType APPLICATION_VND_OIPF_CONTENTACCESSSTREAMING_XML = of("application", "vnd.oipf.contentaccessstreaming+xml");
    public final MediaType APPLICATION_VND_OIPF_CSPG_HEXBINARY = of("application", "vnd.oipf.cspg-hexbinary");
    public final MediaType APPLICATION_VND_OIPF_DAE_SVG_XML = of("application", "vnd.oipf.dae.svg+xml");
    public final MediaType APPLICATION_VND_OIPF_DAE_XHTML_XML = of("application", "vnd.oipf.dae.xhtml+xml");
    public final MediaType APPLICATION_VND_OIPF_MIPPVCONTROLMESSAGE_XML = of("application", "vnd.oipf.mippvcontrolmessage+xml");
    public final MediaType APPLICATION_VND_OIPF_PAE_GEM = of("application", "vnd.oipf.pae.gem");
    public final MediaType APPLICATION_VND_OIPF_SPDISCOVERY_XML = of("application", "vnd.oipf.spdiscovery+xml");
    public final MediaType APPLICATION_VND_OIPF_SPDLIST_XML = of("application", "vnd.oipf.spdlist+xml");
    public final MediaType APPLICATION_VND_OIPF_UEPROFILE_XML = of("application", "vnd.oipf.ueprofile+xml");
    public final MediaType APPLICATION_VND_OIPF_USERPROFILE_XML = of("application", "vnd.oipf.userprofile+xml");
    public final MediaType APPLICATION_VND_OLPC_SUGAR = of("application", "vnd.olpc-sugar", "xo");
    public final MediaType APPLICATION_VND_OMA_SCWS_CONFIG = of("application", "vnd.oma-scws-config");
    public final MediaType APPLICATION_VND_OMA_SCWS_HTTP_REQUEST = of("application", "vnd.oma-scws-http-request");
    public final MediaType APPLICATION_VND_OMA_SCWS_HTTP_RESPONSE = of("application", "vnd.oma-scws-http-response");
    public final MediaType APPLICATION_VND_OMA_BCAST_ASSOCIATED_PROCEDURE_PARAMETER_XML = of("application", "vnd.oma.bcast.associated-procedure-parameter+xml");
    public final MediaType APPLICATION_VND_OMA_BCAST_DRM_TRIGGER_XML = of("application", "vnd.oma.bcast.drm-trigger+xml");
    public final MediaType APPLICATION_VND_OMA_BCAST_IMD_XML = of("application", "vnd.oma.bcast.imd+xml");
    public final MediaType APPLICATION_VND_OMA_BCAST_LTKM = of("application", "vnd.oma.bcast.ltkm");
    public final MediaType APPLICATION_VND_OMA_BCAST_NOTIFICATION_XML = of("application", "vnd.oma.bcast.notification+xml");
    public final MediaType APPLICATION_VND_OMA_BCAST_PROVISIONINGTRIGGER = of("application", "vnd.oma.bcast.provisioningtrigger");
    public final MediaType APPLICATION_VND_OMA_BCAST_SGBOOT = of("application", "vnd.oma.bcast.sgboot");
    public final MediaType APPLICATION_VND_OMA_BCAST_SGDD_XML = of("application", "vnd.oma.bcast.sgdd+xml");
    public final MediaType APPLICATION_VND_OMA_BCAST_SGDU = of("application", "vnd.oma.bcast.sgdu");
    public final MediaType APPLICATION_VND_OMA_BCAST_SIMPLE_SYMBOL_CONTAINER = of("application", "vnd.oma.bcast.simple-symbol-container");
    public final MediaType APPLICATION_VND_OMA_BCAST_SMARTCARD_TRIGGER_XML = of("application", "vnd.oma.bcast.smartcard-trigger+xml");
    public final MediaType APPLICATION_VND_OMA_BCAST_SPROV_XML = of("application", "vnd.oma.bcast.sprov+xml");
    public final MediaType APPLICATION_VND_OMA_BCAST_STKM = of("application", "vnd.oma.bcast.stkm");
    public final MediaType APPLICATION_VND_OMA_CAB_ADDRESS_BOOK_XML = of("application", "vnd.oma.cab-address-book+xml");
    public final MediaType APPLICATION_VND_OMA_CAB_FEATURE_HANDLER_XML = of("application", "vnd.oma.cab-feature-handler+xml");
    public final MediaType APPLICATION_VND_OMA_CAB_PCC_XML = of("application", "vnd.oma.cab-pcc+xml");
    public final MediaType APPLICATION_VND_OMA_CAB_SUBS_INVITE_XML = of("application", "vnd.oma.cab-subs-invite+xml");
    public final MediaType APPLICATION_VND_OMA_CAB_USER_PREFS_XML = of("application", "vnd.oma.cab-user-prefs+xml");
    public final MediaType APPLICATION_VND_OMA_DCD = of("application", "vnd.oma.dcd");
    public final MediaType APPLICATION_VND_OMA_DCDC = of("application", "vnd.oma.dcdc");
    public final MediaType APPLICATION_VND_OMA_DD2_XML = of("application", "vnd.oma.dd2+xml", "dd2");
    public final MediaType APPLICATION_VND_OMA_DRM_RISD_XML = of("application", "vnd.oma.drm.risd+xml");
    public final MediaType APPLICATION_VND_OMA_GROUP_USAGE_LIST_XML = of("application", "vnd.oma.group-usage-list+xml");
    public final MediaType APPLICATION_VND_OMA_LWM2M_JSON = of("application", "vnd.oma.lwm2m+json");
    public final MediaType APPLICATION_VND_OMA_LWM2M_TLV = of("application", "vnd.oma.lwm2m+tlv");
    public final MediaType APPLICATION_VND_OMA_PAL_XML = of("application", "vnd.oma.pal+xml");
    public final MediaType APPLICATION_VND_OMA_POC_DETAILED_PROGRESS_REPORT_XML = of("application", "vnd.oma.poc.detailed-progress-report+xml");
    public final MediaType APPLICATION_VND_OMA_POC_FINAL_REPORT_XML = of("application", "vnd.oma.poc.final-report+xml");
    public final MediaType APPLICATION_VND_OMA_POC_GROUPS_XML = of("application", "vnd.oma.poc.groups+xml");
    public final MediaType APPLICATION_VND_OMA_POC_INVOCATION_DESCRIPTOR_XML = of("application", "vnd.oma.poc.invocation-descriptor+xml");
    public final MediaType APPLICATION_VND_OMA_POC_OPTIMIZED_PROGRESS_REPORT_XML = of("application", "vnd.oma.poc.optimized-progress-report+xml");
    public final MediaType APPLICATION_VND_OMA_PUSH = of("application", "vnd.oma.push");
    public final MediaType APPLICATION_VND_OMA_SCIDM_MESSAGES_XML = of("application", "vnd.oma.scidm.messages+xml");
    public final MediaType APPLICATION_VND_OMA_XCAP_DIRECTORY_XML = of("application", "vnd.oma.xcap-directory+xml");
    public final MediaType APPLICATION_VND_OMADS_EMAIL_XML = of("application", "vnd.omads-email+xml");
    public final MediaType APPLICATION_VND_OMADS_FILE_XML = of("application", "vnd.omads-file+xml");
    public final MediaType APPLICATION_VND_OMADS_FOLDER_XML = of("application", "vnd.omads-folder+xml");
    public final MediaType APPLICATION_VND_OMALOC_SUPL_INIT = of("application", "vnd.omaloc-supl-init");
    public final MediaType APPLICATION_VND_ONEPAGER = of("application", "vnd.onepager");
    public final MediaType APPLICATION_VND_OPENBLOX_GAME_XML = of("application", "vnd.openblox.game+xml");
    public final MediaType APPLICATION_VND_OPENBLOX_GAME_BINARY = of("application", "vnd.openblox.game-binary");
    public final MediaType APPLICATION_VND_OPENEYE_OEB = of("application", "vnd.openeye.oeb");
    public final MediaType APPLICATION_VND_OPENOFFICEORG_EXTENSION = of("application", "vnd.openofficeorg.extension", "oxt");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_CUSTOM_PROPERTIES_XML = of("application", "vnd.openxmlformats-officedocument.custom-properties+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_CUSTOMXMLPROPERTIES_XML = of("application", "vnd.openxmlformats-officedocument.customxmlproperties+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWING_XML = of("application", "vnd.openxmlformats-officedocument.drawing+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_CHART_XML = of("application", "vnd.openxmlformats-officedocument.drawingml.chart+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_CHARTSHAPES_XML = of("application", "vnd.openxmlformats-officedocument.drawingml.chartshapes+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_DIAGRAMCOLORS_XML = of("application", "vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_DIAGRAMDATA_XML = of("application", "vnd.openxmlformats-officedocument.drawingml.diagramdata+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_DIAGRAMLAYOUT_XML = of("application", "vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_DIAGRAMSTYLE_XML = of("application", "vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_EXTENDED_PROPERTIES_XML = of("application", "vnd.openxmlformats-officedocument.extended-properties+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_COMMENTAUTHORS_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.commentauthors+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_COMMENTS_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.comments+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_HANDOUTMASTER_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_NOTESMASTER_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.notesmaster+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_NOTESSLIDE_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.notesslide+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION = of("application", "vnd.openxmlformats-officedocument.presentationml.presentation", "pptx");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION_MAIN_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.presentation.main+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESPROPS_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.presprops+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE = of("application", "vnd.openxmlformats-officedocument.presentationml.slide", "sldx");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.slide+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDELAYOUT_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.slidelayout+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDEMASTER_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.slidemaster+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW = of("application", "vnd.openxmlformats-officedocument.presentationml.slideshow", "ppsx");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW_MAIN_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDEUPDATEINFO_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TABLESTYLES_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.tablestyles+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TAGS_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.tags+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE = of("application", "vnd.openxmlformats-officedocument.presentationml.template", "potx");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE_MAIN_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.template.main+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_VIEWPROPS_XML = of("application", "vnd.openxmlformats-officedocument.presentationml.viewprops+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_CALCCHAIN_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_CHARTSHEET_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_COMMENTS_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.comments+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_CONNECTIONS_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.connections+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_DIALOGSHEET_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_EXTERNALLINK_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_PIVOTCACHEDEFINITION_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_PIVOTCACHERECORDS_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_PIVOTTABLE_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_QUERYTABLE_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_REVISIONHEADERS_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_REVISIONLOG_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHAREDSTRINGS_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.sheet", "xlsx");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET_MAIN_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEETMETADATA_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_STYLES_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.styles+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TABLE_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.table+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TABLESINGLECELLS_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.template", "xltx");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE_MAIN_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_USERNAMES_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_VOLATILEDEPENDENCIES_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_WORKSHEET_XML = of("application", "vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_THEME_XML = of("application", "vnd.openxmlformats-officedocument.theme+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_THEMEOVERRIDE_XML = of("application", "vnd.openxmlformats-officedocument.themeoverride+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_VMLDRAWING = of("application", "vnd.openxmlformats-officedocument.vmldrawing");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_COMMENTS_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.comments+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.document", "docx");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT_GLOSSARY_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT_MAIN_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_ENDNOTES_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_FONTTABLE_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_FOOTER_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.footer+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_FOOTNOTES_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_NUMBERING_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_SETTINGS_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.settings+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_STYLES_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.styles+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.template", "dotx");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE_MAIN_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_WEBSETTINGS_XML = of("application", "vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_PACKAGE_CORE_PROPERTIES_XML = of("application", "vnd.openxmlformats-package.core-properties+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_PACKAGE_DIGITAL_SIGNATURE_XMLSIGNATURE_XML = of("application", "vnd.openxmlformats-package.digital-signature-xmlsignature+xml");
    public final MediaType APPLICATION_VND_OPENXMLFORMATS_PACKAGE_RELATIONSHIPS_XML = of("application", "vnd.openxmlformats-package.relationships+xml");
    public final MediaType APPLICATION_VND_ORACLE_RESOURCE_JSON = of("application", "vnd.oracle.resource+json");
    public final MediaType APPLICATION_VND_ORANGE_INDATA = of("application", "vnd.orange.indata");
    public final MediaType APPLICATION_VND_OSA_NETDEPLOY = of("application", "vnd.osa.netdeploy");
    public final MediaType APPLICATION_VND_OSGEO_MAPGUIDE_PACKAGE = of("application", "vnd.osgeo.mapguide.package", "mgp");
    public final MediaType APPLICATION_VND_OSGI_BUNDLE = of("application", "vnd.osgi.bundle");
    public final MediaType APPLICATION_VND_OSGI_DP = of("application", "vnd.osgi.dp", "dp");
    public final MediaType APPLICATION_VND_OSGI_SUBSYSTEM = of("application", "vnd.osgi.subsystem", "esa");
    public final MediaType APPLICATION_VND_OTPS_CT_KIP_XML = of("application", "vnd.otps.ct-kip+xml");
    public final MediaType APPLICATION_VND_OXLI_COUNTGRAPH = of("application", "vnd.oxli.countgraph");
    public final MediaType APPLICATION_VND_PAGERDUTY_JSON = of("application", "vnd.pagerduty+json");
    public final MediaType APPLICATION_VND_PALM = of("application", "vnd.palm", "pdb", "pqa", "oprc");
    public final MediaType APPLICATION_VND_PANOPLY = of("application", "vnd.panoply");
    public final MediaType APPLICATION_VND_PAOS_XML = of("application", "vnd.paos.xml");
    public final MediaType APPLICATION_VND_PAWAAFILE = of("application", "vnd.pawaafile", "paw");
    public final MediaType APPLICATION_VND_PCOS = of("application", "vnd.pcos");
    public final MediaType APPLICATION_VND_PG_FORMAT = of("application", "vnd.pg.format", "str");
    public final MediaType APPLICATION_VND_PG_OSASLI = of("application", "vnd.pg.osasli", "ei6");
    public final MediaType APPLICATION_VND_PIACCESS_APPLICATION_LICENCE = of("application", "vnd.piaccess.application-licence");
    public final MediaType APPLICATION_VND_PICSEL = of("application", "vnd.picsel", "efif");
    public final MediaType APPLICATION_VND_PMI_WIDGET = of("application", "vnd.pmi.widget", "wg");
    public final MediaType APPLICATION_VND_POC_GROUP_ADVERTISEMENT_XML = of("application", "vnd.poc.group-advertisement+xml");
    public final MediaType APPLICATION_VND_POCKETLEARN = of("application", "vnd.pocketlearn", "plf");
    public final MediaType APPLICATION_VND_POWERBUILDER6 = of("application", "vnd.powerbuilder6", "pbd");
    public final MediaType APPLICATION_VND_POWERBUILDER6_S = of("application", "vnd.powerbuilder6-s");
    public final MediaType APPLICATION_VND_POWERBUILDER7 = of("application", "vnd.powerbuilder7");
    public final MediaType APPLICATION_VND_POWERBUILDER7_S = of("application", "vnd.powerbuilder7-s");
    public final MediaType APPLICATION_VND_POWERBUILDER75 = of("application", "vnd.powerbuilder75");
    public final MediaType APPLICATION_VND_POWERBUILDER75_S = of("application", "vnd.powerbuilder75-s");
    public final MediaType APPLICATION_VND_PREMINET = of("application", "vnd.preminet");
    public final MediaType APPLICATION_VND_PREVIEWSYSTEMS_BOX = of("application", "vnd.previewsystems.box", "box");
    public final MediaType APPLICATION_VND_PROTEUS_MAGAZINE = of("application", "vnd.proteus.magazine", "mgz");
    public final MediaType APPLICATION_VND_PUBLISHARE_DELTA_TREE = of("application", "vnd.publishare-delta-tree", "qps");
    public final MediaType APPLICATION_VND_PVI_PTID1 = of("application", "vnd.pvi.ptid1", "ptid");
    public final MediaType APPLICATION_VND_PWG_MULTIPLEXED = of("application", "vnd.pwg-multiplexed");
    public final MediaType APPLICATION_VND_PWG_XHTML_PRINT_XML = of("application", "vnd.pwg-xhtml-print+xml");
    public final MediaType APPLICATION_VND_QUALCOMM_BREW_APP_RES = of("application", "vnd.qualcomm.brew-app-res");
    public final MediaType APPLICATION_VND_QUARANTAINENET = of("application", "vnd.quarantainenet");
    public final MediaType APPLICATION_VND_QUARK_QUARKXPRESS = of("application", "vnd.quark.quarkxpress", "qxd", "qxt", "qwd", "qwt", "qxl", "qxb");
    public final MediaType APPLICATION_VND_QUOBJECT_QUOXDOCUMENT = of("application", "vnd.quobject-quoxdocument");
    public final MediaType APPLICATION_VND_RADISYS_MOML_XML = of("application", "vnd.radisys.moml+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_XML = of("application", "vnd.radisys.msml+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_AUDIT_XML = of("application", "vnd.radisys.msml-audit+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_AUDIT_CONF_XML = of("application", "vnd.radisys.msml-audit-conf+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_AUDIT_CONN_XML = of("application", "vnd.radisys.msml-audit-conn+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_AUDIT_DIALOG_XML = of("application", "vnd.radisys.msml-audit-dialog+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_AUDIT_STREAM_XML = of("application", "vnd.radisys.msml-audit-stream+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_CONF_XML = of("application", "vnd.radisys.msml-conf+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_DIALOG_XML = of("application", "vnd.radisys.msml-dialog+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_DIALOG_BASE_XML = of("application", "vnd.radisys.msml-dialog-base+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_DIALOG_FAX_DETECT_XML = of("application", "vnd.radisys.msml-dialog-fax-detect+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_DIALOG_FAX_SENDRECV_XML = of("application", "vnd.radisys.msml-dialog-fax-sendrecv+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_DIALOG_GROUP_XML = of("application", "vnd.radisys.msml-dialog-group+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_DIALOG_SPEECH_XML = of("application", "vnd.radisys.msml-dialog-speech+xml");
    public final MediaType APPLICATION_VND_RADISYS_MSML_DIALOG_TRANSFORM_XML = of("application", "vnd.radisys.msml-dialog-transform+xml");
    public final MediaType APPLICATION_VND_RAINSTOR_DATA = of("application", "vnd.rainstor.data");
    public final MediaType APPLICATION_VND_RAPID = of("application", "vnd.rapid");
    public final MediaType APPLICATION_VND_RAR = of("application", "vnd.rar");
    public final MediaType APPLICATION_VND_REALVNC_BED = of("application", "vnd.realvnc.bed", "bed");
    public final MediaType APPLICATION_VND_RECORDARE_MUSICXML = of("application", "vnd.recordare.musicxml", "mxl");
    public final MediaType APPLICATION_VND_RECORDARE_MUSICXML_XML = of("application", "vnd.recordare.musicxml+xml", "musicxml");
    public final MediaType APPLICATION_VND_RENLEARN_RLPRINT = of("application", "vnd.renlearn.rlprint");
    public final MediaType APPLICATION_VND_RIG_CRYPTONOTE = of("application", "vnd.rig.cryptonote", "cryptonote");
    public final MediaType APPLICATION_VND_RIM_COD = of("application", "vnd.rim.cod", "cod");
    public final MediaType APPLICATION_VND_RN_REALMEDIA = of("application", "vnd.rn-realmedia", "rm");
    public final MediaType APPLICATION_VND_RN_REALMEDIA_VBR = of("application", "vnd.rn-realmedia-vbr", "rmvb");
    public final MediaType APPLICATION_VND_ROUTE66_LINK66_XML = of("application", "vnd.route66.link66+xml", "link66");
    public final MediaType APPLICATION_VND_RS_274X = of("application", "vnd.rs-274x");
    public final MediaType APPLICATION_VND_RUCKUS_DOWNLOAD = of("application", "vnd.ruckus.download");
    public final MediaType APPLICATION_VND_S3SMS = of("application", "vnd.s3sms");
    public final MediaType APPLICATION_VND_SAILINGTRACKER_TRACK = of("application", "vnd.sailingtracker.track", "st");
    public final MediaType APPLICATION_VND_SBM_CID = of("application", "vnd.sbm.cid");
    public final MediaType APPLICATION_VND_SBM_MID2 = of("application", "vnd.sbm.mid2");
    public final MediaType APPLICATION_VND_SCRIBUS = of("application", "vnd.scribus");
    public final MediaType APPLICATION_VND_SEALED_3DF = of("application", "vnd.sealed.3df");
    public final MediaType APPLICATION_VND_SEALED_CSF = of("application", "vnd.sealed.csf");
    public final MediaType APPLICATION_VND_SEALED_DOC = of("application", "vnd.sealed.doc");
    public final MediaType APPLICATION_VND_SEALED_EML = of("application", "vnd.sealed.eml");
    public final MediaType APPLICATION_VND_SEALED_MHT = of("application", "vnd.sealed.mht");
    public final MediaType APPLICATION_VND_SEALED_NET = of("application", "vnd.sealed.net");
    public final MediaType APPLICATION_VND_SEALED_PPT = of("application", "vnd.sealed.ppt");
    public final MediaType APPLICATION_VND_SEALED_TIFF = of("application", "vnd.sealed.tiff");
    public final MediaType APPLICATION_VND_SEALED_XLS = of("application", "vnd.sealed.xls");
    public final MediaType APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_HTML = of("application", "vnd.sealedmedia.softseal.html");
    public final MediaType APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_PDF = of("application", "vnd.sealedmedia.softseal.pdf");
    public final MediaType APPLICATION_VND_SEEMAIL = of("application", "vnd.seemail", "see");
    public final MediaType APPLICATION_VND_SEMA = of("application", "vnd.sema", "sema");
    public final MediaType APPLICATION_VND_SEMD = of("application", "vnd.semd", "semd");
    public final MediaType APPLICATION_VND_SEMF = of("application", "vnd.semf", "semf");
    public final MediaType APPLICATION_VND_SHANA_INFORMED_FORMDATA = of("application", "vnd.shana.informed.formdata", "ifm");
    public final MediaType APPLICATION_VND_SHANA_INFORMED_FORMTEMPLATE = of("application", "vnd.shana.informed.formtemplate", "itp");
    public final MediaType APPLICATION_VND_SHANA_INFORMED_INTERCHANGE = of("application", "vnd.shana.informed.interchange", "iif");
    public final MediaType APPLICATION_VND_SHANA_INFORMED_PACKAGE = of("application", "vnd.shana.informed.package", "ipk");
    public final MediaType APPLICATION_VND_SIMTECH_MINDMAPPER = of("application", "vnd.simtech-mindmapper", "twd", "twds");
    public final MediaType APPLICATION_VND_SIREN_JSON = of("application", "vnd.siren+json");
    public final MediaType APPLICATION_VND_SMAF = of("application", "vnd.smaf", "mmf");
    public final MediaType APPLICATION_VND_SMART_NOTEBOOK = of("application", "vnd.smart.notebook");
    public final MediaType APPLICATION_VND_SMART_TEACHER = of("application", "vnd.smart.teacher", "teacher");
    public final MediaType APPLICATION_VND_SOFTWARE602_FILLER_FORM_XML = of("application", "vnd.software602.filler.form+xml");
    public final MediaType APPLICATION_VND_SOFTWARE602_FILLER_FORM_XML_ZIP = of("application", "vnd.software602.filler.form-xml-zip");
    public final MediaType APPLICATION_VND_SOLENT_SDKM_XML = of("application", "vnd.solent.sdkm+xml", "sdkm", "sdkd");
    public final MediaType APPLICATION_VND_SPOTFIRE_DXP = of("application", "vnd.spotfire.dxp", "dxp");
    public final MediaType APPLICATION_VND_SPOTFIRE_SFS = of("application", "vnd.spotfire.sfs", "sfs");
    public final MediaType APPLICATION_VND_SSS_COD = of("application", "vnd.sss-cod");
    public final MediaType APPLICATION_VND_SSS_DTF = of("application", "vnd.sss-dtf");
    public final MediaType APPLICATION_VND_SSS_NTF = of("application", "vnd.sss-ntf");
    public final MediaType APPLICATION_VND_STARDIVISION_CALC = of("application", "vnd.stardivision.calc", "sdc");
    public final MediaType APPLICATION_VND_STARDIVISION_DRAW = of("application", "vnd.stardivision.draw", "sda");
    public final MediaType APPLICATION_VND_STARDIVISION_IMPRESS = of("application", "vnd.stardivision.impress", "sdd");
    public final MediaType APPLICATION_VND_STARDIVISION_MATH = of("application", "vnd.stardivision.math", "smf");
    public final MediaType APPLICATION_VND_STARDIVISION_WRITER = of("application", "vnd.stardivision.writer", "sdw", "vor");
    public final MediaType APPLICATION_VND_STARDIVISION_WRITER_GLOBAL = of("application", "vnd.stardivision.writer-global", "sgl");
    public final MediaType APPLICATION_VND_STEPMANIA_PACKAGE = of("application", "vnd.stepmania.package", "smzip");
    public final MediaType APPLICATION_VND_STEPMANIA_STEPCHART = of("application", "vnd.stepmania.stepchart", "sm");
    public final MediaType APPLICATION_VND_STREET_STREAM = of("application", "vnd.street-stream");
    public final MediaType APPLICATION_VND_SUN_WADL_XML = of("application", "vnd.sun.wadl+xml");
    public final MediaType APPLICATION_VND_SUN_XML_CALC = of("application", "vnd.sun.xml.calc", "sxc");
    public final MediaType APPLICATION_VND_SUN_XML_CALC_TEMPLATE = of("application", "vnd.sun.xml.calc.template", "stc");
    public final MediaType APPLICATION_VND_SUN_XML_DRAW = of("application", "vnd.sun.xml.draw", "sxd");
    public final MediaType APPLICATION_VND_SUN_XML_DRAW_TEMPLATE = of("application", "vnd.sun.xml.draw.template", "std");
    public final MediaType APPLICATION_VND_SUN_XML_IMPRESS = of("application", "vnd.sun.xml.impress", "sxi");
    public final MediaType APPLICATION_VND_SUN_XML_IMPRESS_TEMPLATE = of("application", "vnd.sun.xml.impress.template", "sti");
    public final MediaType APPLICATION_VND_SUN_XML_MATH = of("application", "vnd.sun.xml.math", "sxm");
    public final MediaType APPLICATION_VND_SUN_XML_WRITER = of("application", "vnd.sun.xml.writer", "sxw");
    public final MediaType APPLICATION_VND_SUN_XML_WRITER_GLOBAL = of("application", "vnd.sun.xml.writer.global", "sxg");
    public final MediaType APPLICATION_VND_SUN_XML_WRITER_TEMPLATE = of("application", "vnd.sun.xml.writer.template", "stw");
    public final MediaType APPLICATION_VND_SUS_CALENDAR = of("application", "vnd.sus-calendar", "sus", "susp");
    public final MediaType APPLICATION_VND_SVD = of("application", "vnd.svd", "svd");
    public final MediaType APPLICATION_VND_SWIFTVIEW_ICS = of("application", "vnd.swiftview-ics");
    public final MediaType APPLICATION_VND_SYMBIAN_INSTALL = of("application", "vnd.symbian.install", "sis", "sisx");
    public final MediaType APPLICATION_VND_SYNCML_XML = of("application", "vnd.syncml+xml", "xsm");
    public final MediaType APPLICATION_VND_SYNCML_DM_WBXML = of("application", "vnd.syncml.dm+wbxml", "bdm");
    public final MediaType APPLICATION_VND_SYNCML_DM_XML = of("application", "vnd.syncml.dm+xml", "xdm");
    public final MediaType APPLICATION_VND_SYNCML_DM_NOTIFICATION = of("application", "vnd.syncml.dm.notification");
    public final MediaType APPLICATION_VND_SYNCML_DMDDF_WBXML = of("application", "vnd.syncml.dmddf+wbxml");
    public final MediaType APPLICATION_VND_SYNCML_DMDDF_XML = of("application", "vnd.syncml.dmddf+xml");
    public final MediaType APPLICATION_VND_SYNCML_DMTNDS_WBXML = of("application", "vnd.syncml.dmtnds+wbxml");
    public final MediaType APPLICATION_VND_SYNCML_DMTNDS_XML = of("application", "vnd.syncml.dmtnds+xml");
    public final MediaType APPLICATION_VND_SYNCML_DS_NOTIFICATION = of("application", "vnd.syncml.ds.notification");
    public final MediaType APPLICATION_VND_TAO_INTENT_MODULE_ARCHIVE = of("application", "vnd.tao.intent-module-archive", "tao");
    public final MediaType APPLICATION_VND_TCPDUMP_PCAP = of("application", "vnd.tcpdump.pcap", "pcap", "cap", "dmp");
    public final MediaType APPLICATION_VND_TMD_MEDIAFLEX_API_XML = of("application", "vnd.tmd.mediaflex.api+xml");
    public final MediaType APPLICATION_VND_TML = of("application", "vnd.tml");
    public final MediaType APPLICATION_VND_TMOBILE_LIVETV = of("application", "vnd.tmobile-livetv", "tmo");
    public final MediaType APPLICATION_VND_TRID_TPT = of("application", "vnd.trid.tpt", "tpt");
    public final MediaType APPLICATION_VND_TRISCAPE_MXS = of("application", "vnd.triscape.mxs", "mxs");
    public final MediaType APPLICATION_VND_TRUEAPP = of("application", "vnd.trueapp", "tra");
    public final MediaType APPLICATION_VND_TRUEDOC = of("application", "vnd.truedoc");
    public final MediaType APPLICATION_VND_UBISOFT_WEBPLAYER = of("application", "vnd.ubisoft.webplayer");
    public final MediaType APPLICATION_VND_UFDL = of("application", "vnd.ufdl", "ufd", "ufdl");
    public final MediaType APPLICATION_VND_UIQ_THEME = of("application", "vnd.uiq.theme", "utz");
    public final MediaType APPLICATION_VND_UMAJIN = of("application", "vnd.umajin", "umj");
    public final MediaType APPLICATION_VND_UNITY = of("application", "vnd.unity", "unityweb");
    public final MediaType APPLICATION_VND_UOML_XML = of("application", "vnd.uoml+xml", "uoml");
    public final MediaType APPLICATION_VND_UPLANET_ALERT = of("application", "vnd.uplanet.alert");
    public final MediaType APPLICATION_VND_UPLANET_ALERT_WBXML = of("application", "vnd.uplanet.alert-wbxml");
    public final MediaType APPLICATION_VND_UPLANET_BEARER_CHOICE = of("application", "vnd.uplanet.bearer-choice");
    public final MediaType APPLICATION_VND_UPLANET_BEARER_CHOICE_WBXML = of("application", "vnd.uplanet.bearer-choice-wbxml");
    public final MediaType APPLICATION_VND_UPLANET_CACHEOP = of("application", "vnd.uplanet.cacheop");
    public final MediaType APPLICATION_VND_UPLANET_CACHEOP_WBXML = of("application", "vnd.uplanet.cacheop-wbxml");
    public final MediaType APPLICATION_VND_UPLANET_CHANNEL = of("application", "vnd.uplanet.channel");
    public final MediaType APPLICATION_VND_UPLANET_CHANNEL_WBXML = of("application", "vnd.uplanet.channel-wbxml");
    public final MediaType APPLICATION_VND_UPLANET_LIST = of("application", "vnd.uplanet.list");
    public final MediaType APPLICATION_VND_UPLANET_LIST_WBXML = of("application", "vnd.uplanet.list-wbxml");
    public final MediaType APPLICATION_VND_UPLANET_LISTCMD = of("application", "vnd.uplanet.listcmd");
    public final MediaType APPLICATION_VND_UPLANET_LISTCMD_WBXML = of("application", "vnd.uplanet.listcmd-wbxml");
    public final MediaType APPLICATION_VND_UPLANET_SIGNAL = of("application", "vnd.uplanet.signal");
    public final MediaType APPLICATION_VND_URI_MAP = of("application", "vnd.uri-map");
    public final MediaType APPLICATION_VND_VALVE_SOURCE_MATERIAL = of("application", "vnd.valve.source.material");
    public final MediaType APPLICATION_VND_VCX = of("application", "vnd.vcx", "vcx");
    public final MediaType APPLICATION_VND_VD_STUDY = of("application", "vnd.vd-study");
    public final MediaType APPLICATION_VND_VECTORWORKS = of("application", "vnd.vectorworks");
    public final MediaType APPLICATION_VND_VEL_JSON = of("application", "vnd.vel+json");
    public final MediaType APPLICATION_VND_VERIMATRIX_VCAS = of("application", "vnd.verimatrix.vcas");
    public final MediaType APPLICATION_VND_VIDSOFT_VIDCONFERENCE = of("application", "vnd.vidsoft.vidconference");
    public final MediaType APPLICATION_VND_VISIO = of("application", "vnd.visio", "vsd", "vst", "vss", "vsw");
    public final MediaType APPLICATION_VND_VISIONARY = of("application", "vnd.visionary", "vis");
    public final MediaType APPLICATION_VND_VIVIDENCE_SCRIPTFILE = of("application", "vnd.vividence.scriptfile");
    public final MediaType APPLICATION_VND_VSF = of("application", "vnd.vsf", "vsf");
    public final MediaType APPLICATION_VND_WAP_SIC = of("application", "vnd.wap.sic");
    public final MediaType APPLICATION_VND_WAP_SLC = of("application", "vnd.wap.slc");
    public final MediaType APPLICATION_VND_WAP_WBXML = of("application", "vnd.wap.wbxml", "wbxml");
    public final MediaType APPLICATION_VND_WAP_WMLC = of("application", "vnd.wap.wmlc", "wmlc");
    public final MediaType APPLICATION_VND_WAP_WMLSCRIPTC = of("application", "vnd.wap.wmlscriptc", "wmlsc");
    public final MediaType APPLICATION_VND_WEBTURBO = of("application", "vnd.webturbo", "wtb");
    public final MediaType APPLICATION_VND_WFA_P2P = of("application", "vnd.wfa.p2p");
    public final MediaType APPLICATION_VND_WFA_WSC = of("application", "vnd.wfa.wsc");
    public final MediaType APPLICATION_VND_WINDOWS_DEVICEPAIRING = of("application", "vnd.windows.devicepairing");
    public final MediaType APPLICATION_VND_WMC = of("application", "vnd.wmc");
    public final MediaType APPLICATION_VND_WMF_BOOTSTRAP = of("application", "vnd.wmf.bootstrap");
    public final MediaType APPLICATION_VND_WOLFRAM_MATHEMATICA = of("application", "vnd.wolfram.mathematica");
    public final MediaType APPLICATION_VND_WOLFRAM_MATHEMATICA_PACKAGE = of("application", "vnd.wolfram.mathematica.package");
    public final MediaType APPLICATION_VND_WOLFRAM_PLAYER = of("application", "vnd.wolfram.player", "nbp");
    public final MediaType APPLICATION_VND_WORDPERFECT = of("application", "vnd.wordperfect", "wpd");
    public final MediaType APPLICATION_VND_WQD = of("application", "vnd.wqd", "wqd");
    public final MediaType APPLICATION_VND_WRQ_HP3000_LABELLED = of("application", "vnd.wrq-hp3000-labelled");
    public final MediaType APPLICATION_VND_WT_STF = of("application", "vnd.wt.stf", "stf");
    public final MediaType APPLICATION_VND_WV_CSP_WBXML = of("application", "vnd.wv.csp+wbxml");
    public final MediaType APPLICATION_VND_WV_CSP_XML = of("application", "vnd.wv.csp+xml");
    public final MediaType APPLICATION_VND_WV_SSP_XML = of("application", "vnd.wv.ssp+xml");
    public final MediaType APPLICATION_VND_XACML_JSON = of("application", "vnd.xacml+json");
    public final MediaType APPLICATION_VND_XARA = of("application", "vnd.xara", "xar");
    public final MediaType APPLICATION_VND_XFDL = of("application", "vnd.xfdl", "xfdl");
    public final MediaType APPLICATION_VND_XFDL_WEBFORM = of("application", "vnd.xfdl.webform");
    public final MediaType APPLICATION_VND_XMI_XML = of("application", "vnd.xmi+xml");
    public final MediaType APPLICATION_VND_XMPIE_CPKG = of("application", "vnd.xmpie.cpkg");
    public final MediaType APPLICATION_VND_XMPIE_DPKG = of("application", "vnd.xmpie.dpkg");
    public final MediaType APPLICATION_VND_XMPIE_PLAN = of("application", "vnd.xmpie.plan");
    public final MediaType APPLICATION_VND_XMPIE_PPKG = of("application", "vnd.xmpie.ppkg");
    public final MediaType APPLICATION_VND_XMPIE_XLIM = of("application", "vnd.xmpie.xlim");
    public final MediaType APPLICATION_VND_YAMAHA_HV_DIC = of("application", "vnd.yamaha.hv-dic", "hvd");
    public final MediaType APPLICATION_VND_YAMAHA_HV_SCRIPT = of("application", "vnd.yamaha.hv-script", "hvs");
    public final MediaType APPLICATION_VND_YAMAHA_HV_VOICE = of("application", "vnd.yamaha.hv-voice", "hvp");
    public final MediaType APPLICATION_VND_YAMAHA_OPENSCOREFORMAT = of("application", "vnd.yamaha.openscoreformat", "osf");
    public final MediaType APPLICATION_VND_YAMAHA_OPENSCOREFORMAT_OSFPVG_XML = of("application", "vnd.yamaha.openscoreformat.osfpvg+xml", "osfpvg");
    public final MediaType APPLICATION_VND_YAMAHA_REMOTE_SETUP = of("application", "vnd.yamaha.remote-setup");
    public final MediaType APPLICATION_VND_YAMAHA_SMAF_AUDIO = of("application", "vnd.yamaha.smaf-audio", "saf");
    public final MediaType APPLICATION_VND_YAMAHA_SMAF_PHRASE = of("application", "vnd.yamaha.smaf-phrase", "spf");
    public final MediaType APPLICATION_VND_YAMAHA_THROUGH_NGN = of("application", "vnd.yamaha.through-ngn");
    public final MediaType APPLICATION_VND_YAMAHA_TUNNEL_UDPENCAP = of("application", "vnd.yamaha.tunnel-udpencap");
    public final MediaType APPLICATION_VND_YAOWEME = of("application", "vnd.yaoweme");
    public final MediaType APPLICATION_VND_YELLOWRIVER_CUSTOM_MENU = of("application", "vnd.yellowriver-custom-menu", "cmp");
    public final MediaType APPLICATION_VND_ZUL = of("application", "vnd.zul", "zir", "zirz");
    public final MediaType APPLICATION_VND_ZZAZZ_DECK_XML = of("application", "vnd.zzazz.deck+xml", "zaz");
    public final MediaType APPLICATION_VOICEXML_XML = of("application", "voicexml+xml", "vxml");
    public final MediaType APPLICATION_VQ_RTCPXR = of("application", "vq-rtcpxr");
    public final MediaType APPLICATION_WATCHERINFO_XML = of("application", "watcherinfo+xml");
    public final MediaType APPLICATION_WHOISPP_QUERY = of("application", "whoispp-query");
    public final MediaType APPLICATION_WHOISPP_RESPONSE = of("application", "whoispp-response");
    public final MediaType APPLICATION_WIDGET = of("application", "widget", "wgt");
    public final MediaType APPLICATION_WINHLP = of("application", "winhlp", "hlp");
    public final MediaType APPLICATION_WITA = of("application", "wita");
    public final MediaType APPLICATION_WORDPERFECT5_1 = of("application", "wordperfect5.1");
    public final MediaType APPLICATION_WSDL_XML = of("application", "wsdl+xml", "wsdl");
    public final MediaType APPLICATION_WSPOLICY_XML = of("application", "wspolicy+xml", "wspolicy");
    public final MediaType APPLICATION_X_7Z_COMPRESSED = of("application", "x-7z-compressed", "7z");
    public final MediaType APPLICATION_X_ABIWORD = of("application", "x-abiword", "abw");
    public final MediaType APPLICATION_X_ACE_COMPRESSED = of("application", "x-ace-compressed", "ace");
    public final MediaType APPLICATION_X_AMF = of("application", "x-amf");
    public final MediaType APPLICATION_X_APPLE_DISKIMAGE = of("application", "x-apple-diskimage", "dmg");
    public final MediaType APPLICATION_X_AUTHORWARE_BIN = of("application", "x-authorware-bin", "aab", "x32", "u32", "vox");
    public final MediaType APPLICATION_X_AUTHORWARE_MAP = of("application", "x-authorware-map", "aam");
    public final MediaType APPLICATION_X_AUTHORWARE_SEG = of("application", "x-authorware-seg", "aas");
    public final MediaType APPLICATION_X_BCPIO = of("application", "x-bcpio", "bcpio");
    public final MediaType APPLICATION_X_BITTORRENT = of("application", "x-bittorrent", "torrent");
    public final MediaType APPLICATION_X_BLORB = of("application", "x-blorb", "blb", "blorb");
    public final MediaType APPLICATION_X_BZIP = of("application", "x-bzip", "bz");
    public final MediaType APPLICATION_X_BZIP2 = of("application", "x-bzip2", "bz2", "boz");
    public final MediaType APPLICATION_X_CBR = of("application", "x-cbr", "cbr", "cba", "cbt", "cbz", "cb7");
    public final MediaType APPLICATION_X_CDLINK = of("application", "x-cdlink", "vcd");
    public final MediaType APPLICATION_X_CFS_COMPRESSED = of("application", "x-cfs-compressed", "cfs");
    public final MediaType APPLICATION_X_CHAT = of("application", "x-chat", "chat");
    public final MediaType APPLICATION_X_CHESS_PGN = of("application", "x-chess-pgn", "pgn");
    public final MediaType APPLICATION_X_COMPRESS = of("application", "x-compress");
    public final MediaType APPLICATION_X_CONFERENCE = of("application", "x-conference", "nsc");
    public final MediaType APPLICATION_X_CPIO = of("application", "x-cpio", "cpio");
    public final MediaType APPLICATION_X_CSH = of("application", "x-csh", "csh");
    public final MediaType APPLICATION_X_DEBIAN_PACKAGE = of("application", "x-debian-package", "deb", "udeb");
    public final MediaType APPLICATION_X_DGC_COMPRESSED = of("application", "x-dgc-compressed", "dgc");
    public final MediaType APPLICATION_X_DIRECTOR = of("application", "x-director", "dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa");
    public final MediaType APPLICATION_X_DOOM = of("application", "x-doom", "wad");
    public final MediaType APPLICATION_X_DTBNCX_XML = of("application", "x-dtbncx+xml", "ncx");
    public final MediaType APPLICATION_X_DTBOOK_XML = of("application", "x-dtbook+xml", "dtb");
    public final MediaType APPLICATION_X_DTBRESOURCE_XML = of("application", "x-dtbresource+xml", "res");
    public final MediaType APPLICATION_X_DVI = of("application", "x-dvi", "dvi");
    public final MediaType APPLICATION_X_ENVOY = of("application", "x-envoy", "evy");
    public final MediaType APPLICATION_X_EVA = of("application", "x-eva", "eva");
    public final MediaType APPLICATION_X_FONT_BDF = of("application", "x-font-bdf", "bdf");
    public final MediaType APPLICATION_X_FONT_DOS = of("application", "x-font-dos");
    public final MediaType APPLICATION_X_FONT_FRAMEMAKER = of("application", "x-font-framemaker");
    public final MediaType APPLICATION_X_FONT_GHOSTSCRIPT = of("application", "x-font-ghostscript", "gsf");
    public final MediaType APPLICATION_X_FONT_LIBGRX = of("application", "x-font-libgrx");
    public final MediaType APPLICATION_X_FONT_LINUX_PSF = of("application", "x-font-linux-psf", "psf");
    public final MediaType APPLICATION_X_FONT_PCF = of("application", "x-font-pcf", "pcf");
    public final MediaType APPLICATION_X_FONT_SNF = of("application", "x-font-snf", "snf");
    public final MediaType APPLICATION_X_FONT_SPEEDO = of("application", "x-font-speedo");
    public final MediaType APPLICATION_X_FONT_SUNOS_NEWS = of("application", "x-font-sunos-news");
    public final MediaType APPLICATION_X_FONT_TYPE1 = of("application", "x-font-type1", "pfa", "pfb", "pfm", "afm");
    public final MediaType APPLICATION_X_FONT_VFONT = of("application", "x-font-vfont");
    public final MediaType APPLICATION_X_FREEARC = of("application", "x-freearc", "arc");
    public final MediaType APPLICATION_X_FUTURESPLASH = of("application", "x-futuresplash", "spl");
    public final MediaType APPLICATION_X_GCA_COMPRESSED = of("application", "x-gca-compressed", "gca");
    public final MediaType APPLICATION_X_GLULX = of("application", "x-glulx", "ulx");
    public final MediaType APPLICATION_X_GNUMERIC = of("application", "x-gnumeric", "gnumeric");
    public final MediaType APPLICATION_X_GRAMPS_XML = of("application", "x-gramps-xml", "gramps");
    public final MediaType APPLICATION_X_GTAR = of("application", "x-gtar", "gtar");
    public final MediaType APPLICATION_X_GZIP = of("application", "x-gzip");
    public final MediaType APPLICATION_X_HDF = of("application", "x-hdf", "hdf");
    public final MediaType APPLICATION_X_INSTALL_INSTRUCTIONS = of("application", "x-install-instructions", "install");
    public final MediaType APPLICATION_X_ISO9660_IMAGE = of("application", "x-iso9660-image", "iso");
    public final MediaType APPLICATION_X_JAVA_JNLP_FILE = of("application", "x-java-jnlp-file", "jnlp");
    public final MediaType APPLICATION_X_LATEX = of("application", "x-latex", "latex");
    public final MediaType APPLICATION_X_LZH_COMPRESSED = of("application", "x-lzh-compressed", "lzh", "lha");
    public final MediaType APPLICATION_X_MIE = of("application", "x-mie", "mie");
    public final MediaType APPLICATION_X_MOBIPOCKET_EBOOK = of("application", "x-mobipocket-ebook", "prc", "mobi");
    public final MediaType APPLICATION_X_MS_APPLICATION = of("application", "x-ms-application", "application");
    public final MediaType APPLICATION_X_MS_SHORTCUT = of("application", "x-ms-shortcut", "lnk");
    public final MediaType APPLICATION_X_MS_WMD = of("application", "x-ms-wmd", "wmd");
    public final MediaType APPLICATION_X_MS_WMZ = of("application", "x-ms-wmz", "wmz");
    public final MediaType APPLICATION_X_MS_XBAP = of("application", "x-ms-xbap", "xbap");
    public final MediaType APPLICATION_X_MSACCESS = of("application", "x-msaccess", "mdb");
    public final MediaType APPLICATION_X_MSBINDER = of("application", "x-msbinder", "obd");
    public final MediaType APPLICATION_X_MSCARDFILE = of("application", "x-mscardfile", "crd");
    public final MediaType APPLICATION_X_MSCLIP = of("application", "x-msclip", "clp");
    public final MediaType APPLICATION_X_MSDOWNLOAD = of("application", "x-msdownload", "exe", "dll", "com", "bat", "msi");
    public final MediaType APPLICATION_X_MSMEDIAVIEW = of("application", "x-msmediaview", "mvb", "m13", "m14");
    public final MediaType APPLICATION_X_MSMETAFILE = of("application", "x-msmetafile", "wmf", "wmz", "emf", "emz");
    public final MediaType APPLICATION_X_MSMONEY = of("application", "x-msmoney", "mny");
    public final MediaType APPLICATION_X_MSPUBLISHER = of("application", "x-mspublisher", "pub");
    public final MediaType APPLICATION_X_MSSCHEDULE = of("application", "x-msschedule", "scd");
    public final MediaType APPLICATION_X_MSTERMINAL = of("application", "x-msterminal", "trm");
    public final MediaType APPLICATION_X_MSWRITE = of("application", "x-mswrite", "wri");
    public final MediaType APPLICATION_X_NETCDF = of("application", "x-netcdf", "nc", "cdf");
    public final MediaType APPLICATION_X_NZB = of("application", "x-nzb", "nzb");
    public final MediaType APPLICATION_X_PKCS12 = of("application", "x-pkcs12", "p12", "pfx");
    public final MediaType APPLICATION_X_PKCS7_CERTIFICATES = of("application", "x-pkcs7-certificates", "p7b", "spc");
    public final MediaType APPLICATION_X_PKCS7_CERTREQRESP = of("application", "x-pkcs7-certreqresp", "p7r");
    public final MediaType APPLICATION_X_RAR_COMPRESSED = of("application", "x-rar-compressed", "rar");
    public final MediaType APPLICATION_X_RESEARCH_INFO_SYSTEMS = of("application", "x-research-info-systems", "ris");
    public final MediaType APPLICATION_X_SH = of("application", "x-sh", "sh");
    public final MediaType APPLICATION_X_SHAR = of("application", "x-shar", "shar");
    public final MediaType APPLICATION_X_SHOCKWAVE_FLASH = of("application", "x-shockwave-flash", "swf");
    public final MediaType APPLICATION_X_SILVERLIGHT_APP = of("application", "x-silverlight-app", "xap");
    public final MediaType APPLICATION_X_SQL = of("application", "x-sql", "sql");
    public final MediaType APPLICATION_X_STUFFIT = of("application", "x-stuffit", "sit");
    public final MediaType APPLICATION_X_STUFFITX = of("application", "x-stuffitx", "sitx");
    public final MediaType APPLICATION_X_SUBRIP = of("application", "x-subrip", "srt");
    public final MediaType APPLICATION_X_SV4CPIO = of("application", "x-sv4cpio", "sv4cpio");
    public final MediaType APPLICATION_X_SV4CRC = of("application", "x-sv4crc", "sv4crc");
    public final MediaType APPLICATION_X_T3VM_IMAGE = of("application", "x-t3vm-image", "t3");
    public final MediaType APPLICATION_X_TADS = of("application", "x-tads", "gam");
    public final MediaType APPLICATION_X_TAR = of("application", "x-tar", "tar");
    public final MediaType APPLICATION_X_TCL = of("application", "x-tcl", "tcl");
    public final MediaType APPLICATION_X_TEX = of("application", "x-tex", "tex");
    public final MediaType APPLICATION_X_TEX_TFM = of("application", "x-tex-tfm", "tfm");
    public final MediaType APPLICATION_X_TEXINFO = of("application", "x-texinfo", "texinfo", "texi");
    public final MediaType APPLICATION_X_TGIF = of("application", "x-tgif", "obj");
    public final MediaType APPLICATION_X_USTAR = of("application", "x-ustar", "ustar");
    public final MediaType APPLICATION_X_WAIS_SOURCE = of("application", "x-wais-source", "src");
    public final MediaType APPLICATION_X_WWW_FORM_URLENCODED = of("application", "x-www-form-urlencoded");
    public final MediaType APPLICATION_X_X509_CA_CERT = of("application", "x-x509-ca-cert", "der", "crt");
    public final MediaType APPLICATION_X_XFIG = of("application", "x-xfig", "fig");
    public final MediaType APPLICATION_X_XLIFF_XML = of("application", "x-xliff+xml", "xlf");
    public final MediaType APPLICATION_X_XPINSTALL = of("application", "x-xpinstall", "xpi");
    public final MediaType APPLICATION_X_XZ = of("application", "x-xz", "xz");
    public final MediaType APPLICATION_X_ZMACHINE = of("application", "x-zmachine", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8");
    public final MediaType APPLICATION_X400_BP = of("application", "x400-bp");
    public final MediaType APPLICATION_XACML_XML = of("application", "xacml+xml");
    public final MediaType APPLICATION_XAML_XML = of("application", "xaml+xml", "xaml");
    public final MediaType APPLICATION_XCAP_ATT_XML = of("application", "xcap-att+xml");
    public final MediaType APPLICATION_XCAP_CAPS_XML = of("application", "xcap-caps+xml");
    public final MediaType APPLICATION_XCAP_DIFF_XML = of("application", "xcap-diff+xml", "xdf");
    public final MediaType APPLICATION_XCAP_EL_XML = of("application", "xcap-el+xml");
    public final MediaType APPLICATION_XCAP_ERROR_XML = of("application", "xcap-error+xml");
    public final MediaType APPLICATION_XCAP_NS_XML = of("application", "xcap-ns+xml");
    public final MediaType APPLICATION_XCON_CONFERENCE_INFO_XML = of("application", "xcon-conference-info+xml");
    public final MediaType APPLICATION_XCON_CONFERENCE_INFO_DIFF_XML = of("application", "xcon-conference-info-diff+xml");
    public final MediaType APPLICATION_XENC_XML = of("application", "xenc+xml", "xenc");
    public final MediaType APPLICATION_XHTML_XML = of("application", "xhtml+xml", "xhtml", "xht");
    public final MediaType APPLICATION_XHTML_VOICE_XML = of("application", "xhtml-voice+xml");
    public final MediaType APPLICATION_XML = of("application", "xml", "xml", "xsl");
    public final MediaType APPLICATION_XML_DTD = of("application", "xml-dtd", "dtd");
    public final MediaType APPLICATION_XML_EXTERNAL_PARSED_ENTITY = of("application", "xml-external-parsed-entity");
    public final MediaType APPLICATION_XML_PATCH_XML = of("application", "xml-patch+xml");
    public final MediaType APPLICATION_XMPP_XML = of("application", "xmpp+xml");
    public final MediaType APPLICATION_XOP_XML = of("application", "xop+xml", "xop");
    public final MediaType APPLICATION_XPROC_XML = of("application", "xproc+xml", "xpl");
    public final MediaType APPLICATION_XSLT_XML = of("application", "xslt+xml", "xslt");
    public final MediaType APPLICATION_XSPF_XML = of("application", "xspf+xml", "xspf");
    public final MediaType APPLICATION_XV_XML = of("application", "xv+xml", "mxml", "xhvml", "xvml", "xvm");
    public final MediaType APPLICATION_YANG = of("application", "yang", "yang");
    public final MediaType APPLICATION_YIN_XML = of("application", "yin+xml", "yin");
    public final MediaType APPLICATION_ZIP = of("application", "zip", "zip");
    public final MediaType APPLICATION_ZLIB = of("application", "zlib");
    public final MediaType AUDIO_1D_INTERLEAVED_PARITYFEC = of("audio", "1d-interleaved-parityfec");
    public final MediaType AUDIO_32KADPCM = of("audio", "32kadpcm");
    public final MediaType AUDIO_3GPP = of("audio", "3gpp");
    public final MediaType AUDIO_3GPP2 = of("audio", "3gpp2");
    public final MediaType AUDIO_AC3 = of("audio", "ac3");
    public final MediaType AUDIO_ADPCM = of("audio", "adpcm", "adp");
    public final MediaType AUDIO_AMR = of("audio", "amr");
    public final MediaType AUDIO_AMR_WB = of("audio", "amr-wb");
    public final MediaType AUDIO_AMR_WB_ = of("audio", "amr-wb+");
    public final MediaType AUDIO_APTX = of("audio", "aptx");
    public final MediaType AUDIO_ASC = of("audio", "asc");
    public final MediaType AUDIO_ATRAC_ADVANCED_LOSSLESS = of("audio", "atrac-advanced-lossless");
    public final MediaType AUDIO_ATRAC_X = of("audio", "atrac-x");
    public final MediaType AUDIO_ATRAC3 = of("audio", "atrac3");
    public final MediaType AUDIO_BASIC = of("audio", "basic", "au", "snd");
    public final MediaType AUDIO_BV16 = of("audio", "bv16");
    public final MediaType AUDIO_BV32 = of("audio", "bv32");
    public final MediaType AUDIO_CLEARMODE = of("audio", "clearmode");
    public final MediaType AUDIO_CN = of("audio", "cn");
    public final MediaType AUDIO_DAT12 = of("audio", "dat12");
    public final MediaType AUDIO_DLS = of("audio", "dls");
    public final MediaType AUDIO_DSR_ES201108 = of("audio", "dsr-es201108");
    public final MediaType AUDIO_DSR_ES202050 = of("audio", "dsr-es202050");
    public final MediaType AUDIO_DSR_ES202211 = of("audio", "dsr-es202211");
    public final MediaType AUDIO_DSR_ES202212 = of("audio", "dsr-es202212");
    public final MediaType AUDIO_DV = of("audio", "dv");
    public final MediaType AUDIO_DVI4 = of("audio", "dvi4");
    public final MediaType AUDIO_EAC3 = of("audio", "eac3");
    public final MediaType AUDIO_ENCAPRTP = of("audio", "encaprtp");
    public final MediaType AUDIO_EVRC = of("audio", "evrc");
    public final MediaType AUDIO_EVRC_QCP = of("audio", "evrc-qcp");
    public final MediaType AUDIO_EVRC0 = of("audio", "evrc0");
    public final MediaType AUDIO_EVRC1 = of("audio", "evrc1");
    public final MediaType AUDIO_EVRCB = of("audio", "evrcb");
    public final MediaType AUDIO_EVRCB0 = of("audio", "evrcb0");
    public final MediaType AUDIO_EVRCB1 = of("audio", "evrcb1");
    public final MediaType AUDIO_EVRCNW = of("audio", "evrcnw");
    public final MediaType AUDIO_EVRCNW0 = of("audio", "evrcnw0");
    public final MediaType AUDIO_EVRCNW1 = of("audio", "evrcnw1");
    public final MediaType AUDIO_EVRCWB = of("audio", "evrcwb");
    public final MediaType AUDIO_EVRCWB0 = of("audio", "evrcwb0");
    public final MediaType AUDIO_EVRCWB1 = of("audio", "evrcwb1");
    public final MediaType AUDIO_EVS = of("audio", "evs");
    public final MediaType AUDIO_EXAMPLE = of("audio", "example");
    public final MediaType AUDIO_FWDRED = of("audio", "fwdred");
    public final MediaType AUDIO_G711_0 = of("audio", "g711-0");
    public final MediaType AUDIO_G719 = of("audio", "g719");
    public final MediaType AUDIO_G722 = of("audio", "g722");
    public final MediaType AUDIO_G7221 = of("audio", "g7221");
    public final MediaType AUDIO_G723 = of("audio", "g723");
    public final MediaType AUDIO_G726_16 = of("audio", "g726-16");
    public final MediaType AUDIO_G726_24 = of("audio", "g726-24");
    public final MediaType AUDIO_G726_32 = of("audio", "g726-32");
    public final MediaType AUDIO_G726_40 = of("audio", "g726-40");
    public final MediaType AUDIO_G728 = of("audio", "g728");
    public final MediaType AUDIO_G729 = of("audio", "g729");
    public final MediaType AUDIO_G7291 = of("audio", "g7291");
    public final MediaType AUDIO_G729D = of("audio", "g729d");
    public final MediaType AUDIO_G729E = of("audio", "g729e");
    public final MediaType AUDIO_GSM = of("audio", "gsm");
    public final MediaType AUDIO_GSM_EFR = of("audio", "gsm-efr");
    public final MediaType AUDIO_GSM_HR_08 = of("audio", "gsm-hr-08");
    public final MediaType AUDIO_ILBC = of("audio", "ilbc");
    public final MediaType AUDIO_IP_MR_V2_5 = of("audio", "ip-mr_v2.5");
    public final MediaType AUDIO_ISAC = of("audio", "isac");
    public final MediaType AUDIO_L16 = of("audio", "l16");
    public final MediaType AUDIO_L20 = of("audio", "l20");
    public final MediaType AUDIO_L24 = of("audio", "l24");
    public final MediaType AUDIO_L8 = of("audio", "l8");
    public final MediaType AUDIO_LPC = of("audio", "lpc");
    public final MediaType AUDIO_MIDI = of("audio", "midi", "mid", "midi", "kar", "rmi");
    public final MediaType AUDIO_MOBILE_XMF = of("audio", "mobile-xmf");
    public final MediaType AUDIO_MP4 = of("audio", "mp4", "m4a", "mp4a");
    public final MediaType AUDIO_MP4A_LATM = of("audio", "mp4a-latm");
    public final MediaType AUDIO_MPA = of("audio", "mpa");
    public final MediaType AUDIO_MPA_ROBUST = of("audio", "mpa-robust");
    public final MediaType AUDIO_MPEG = of("audio", "mpeg", "mpga", "mp2", "mp2a", "mp3", "m2a", "m3a");
    public final MediaType AUDIO_MPEG4_GENERIC = of("audio", "mpeg4-generic");
    public final MediaType AUDIO_MUSEPACK = of("audio", "musepack");
    public final MediaType AUDIO_OGG = of("audio", "ogg", "oga", "ogg", "spx", "opus");
    public final MediaType AUDIO_OPUS = of("audio", "opus");
    public final MediaType AUDIO_PARITYFEC = of("audio", "parityfec");
    public final MediaType AUDIO_PCMA = of("audio", "pcma");
    public final MediaType AUDIO_PCMA_WB = of("audio", "pcma-wb");
    public final MediaType AUDIO_PCMU = of("audio", "pcmu");
    public final MediaType AUDIO_PCMU_WB = of("audio", "pcmu-wb");
    public final MediaType AUDIO_PRS_SID = of("audio", "prs.sid");
    public final MediaType AUDIO_QCELP = of("audio", "qcelp");
    public final MediaType AUDIO_RAPTORFEC = of("audio", "raptorfec");
    public final MediaType AUDIO_RED = of("audio", "red");
    public final MediaType AUDIO_RTP_ENC_AESCM128 = of("audio", "rtp-enc-aescm128");
    public final MediaType AUDIO_RTP_MIDI = of("audio", "rtp-midi");
    public final MediaType AUDIO_RTPLOOPBACK = of("audio", "rtploopback");
    public final MediaType AUDIO_RTX = of("audio", "rtx");
    public final MediaType AUDIO_S3M = of("audio", "s3m", "s3m");
    public final MediaType AUDIO_SILK = of("audio", "silk", "sil");
    public final MediaType AUDIO_SMV = of("audio", "smv");
    public final MediaType AUDIO_SMV_QCP = of("audio", "smv-qcp");
    public final MediaType AUDIO_SMV0 = of("audio", "smv0");
    public final MediaType AUDIO_SP_MIDI = of("audio", "sp-midi");
    public final MediaType AUDIO_SPEEX = of("audio", "speex");
    public final MediaType AUDIO_T140C = of("audio", "t140c");
    public final MediaType AUDIO_T38 = of("audio", "t38");
    public final MediaType AUDIO_TELEPHONE_EVENT = of("audio", "telephone-event");
    public final MediaType AUDIO_TONE = of("audio", "tone");
    public final MediaType AUDIO_UEMCLIP = of("audio", "uemclip");
    public final MediaType AUDIO_ULPFEC = of("audio", "ulpfec");
    public final MediaType AUDIO_VDVI = of("audio", "vdvi");
    public final MediaType AUDIO_VMR_WB = of("audio", "vmr-wb");
    public final MediaType AUDIO_VND_3GPP_IUFP = of("audio", "vnd.3gpp.iufp");
    public final MediaType AUDIO_VND_4SB = of("audio", "vnd.4sb");
    public final MediaType AUDIO_VND_AUDIOKOZ = of("audio", "vnd.audiokoz");
    public final MediaType AUDIO_VND_CELP = of("audio", "vnd.celp");
    public final MediaType AUDIO_VND_CISCO_NSE = of("audio", "vnd.cisco.nse");
    public final MediaType AUDIO_VND_CMLES_RADIO_EVENTS = of("audio", "vnd.cmles.radio-events");
    public final MediaType AUDIO_VND_CNS_ANP1 = of("audio", "vnd.cns.anp1");
    public final MediaType AUDIO_VND_CNS_INF1 = of("audio", "vnd.cns.inf1");
    public final MediaType AUDIO_VND_DECE_AUDIO = of("audio", "vnd.dece.audio", "uva", "uvva");
    public final MediaType AUDIO_VND_DIGITAL_WINDS = of("audio", "vnd.digital-winds", "eol");
    public final MediaType AUDIO_VND_DLNA_ADTS = of("audio", "vnd.dlna.adts");
    public final MediaType AUDIO_VND_DOLBY_HEAAC_1 = of("audio", "vnd.dolby.heaac.1");
    public final MediaType AUDIO_VND_DOLBY_HEAAC_2 = of("audio", "vnd.dolby.heaac.2");
    public final MediaType AUDIO_VND_DOLBY_MLP = of("audio", "vnd.dolby.mlp");
    public final MediaType AUDIO_VND_DOLBY_MPS = of("audio", "vnd.dolby.mps");
    public final MediaType AUDIO_VND_DOLBY_PL2 = of("audio", "vnd.dolby.pl2");
    public final MediaType AUDIO_VND_DOLBY_PL2X = of("audio", "vnd.dolby.pl2x");
    public final MediaType AUDIO_VND_DOLBY_PL2Z = of("audio", "vnd.dolby.pl2z");
    public final MediaType AUDIO_VND_DOLBY_PULSE_1 = of("audio", "vnd.dolby.pulse.1");
    public final MediaType AUDIO_VND_DRA = of("audio", "vnd.dra", "dra");
    public final MediaType AUDIO_VND_DTS = of("audio", "vnd.dts", "dts");
    public final MediaType AUDIO_VND_DTS_HD = of("audio", "vnd.dts.hd", "dtshd");
    public final MediaType AUDIO_VND_DVB_FILE = of("audio", "vnd.dvb.file");
    public final MediaType AUDIO_VND_EVERAD_PLJ = of("audio", "vnd.everad.plj");
    public final MediaType AUDIO_VND_HNS_AUDIO = of("audio", "vnd.hns.audio");
    public final MediaType AUDIO_VND_LUCENT_VOICE = of("audio", "vnd.lucent.voice", "lvp");
    public final MediaType AUDIO_VND_MS_PLAYREADY_MEDIA_PYA = of("audio", "vnd.ms-playready.media.pya", "pya");
    public final MediaType AUDIO_VND_NOKIA_MOBILE_XMF = of("audio", "vnd.nokia.mobile-xmf");
    public final MediaType AUDIO_VND_NORTEL_VBK = of("audio", "vnd.nortel.vbk");
    public final MediaType AUDIO_VND_NUERA_ECELP4800 = of("audio", "vnd.nuera.ecelp4800", "ecelp4800");
    public final MediaType AUDIO_VND_NUERA_ECELP7470 = of("audio", "vnd.nuera.ecelp7470", "ecelp7470");
    public final MediaType AUDIO_VND_NUERA_ECELP9600 = of("audio", "vnd.nuera.ecelp9600", "ecelp9600");
    public final MediaType AUDIO_VND_OCTEL_SBC = of("audio", "vnd.octel.sbc");
    public final MediaType AUDIO_VND_QCELP = of("audio", "vnd.qcelp");
    public final MediaType AUDIO_VND_RHETOREX_32KADPCM = of("audio", "vnd.rhetorex.32kadpcm");
    public final MediaType AUDIO_VND_RIP = of("audio", "vnd.rip", "rip");
    public final MediaType AUDIO_VND_SEALEDMEDIA_SOFTSEAL_MPEG = of("audio", "vnd.sealedmedia.softseal.mpeg");
    public final MediaType AUDIO_VND_VMX_CVSD = of("audio", "vnd.vmx.cvsd");
    public final MediaType AUDIO_VORBIS = of("audio", "vorbis");
    public final MediaType AUDIO_VORBIS_CONFIG = of("audio", "vorbis-config");
    public final MediaType AUDIO_WEBM = of("audio", "webm", "weba");
    public final MediaType AUDIO_X_AAC = of("audio", "x-aac", "aac");
    public final MediaType AUDIO_X_AIFF = of("audio", "x-aiff", "aif", "aiff", "aifc");
    public final MediaType AUDIO_X_CAF = of("audio", "x-caf", "caf");
    public final MediaType AUDIO_X_FLAC = of("audio", "x-flac", "flac");
    public final MediaType AUDIO_X_MATROSKA = of("audio", "x-matroska", "mka");
    public final MediaType AUDIO_X_MPEGURL = of("audio", "x-mpegurl", "m3u");
    public final MediaType AUDIO_X_MS_WAX = of("audio", "x-ms-wax", "wax");
    public final MediaType AUDIO_X_MS_WMA = of("audio", "x-ms-wma", "wma");
    public final MediaType AUDIO_X_PN_REALAUDIO = of("audio", "x-pn-realaudio", "ram", "ra");
    public final MediaType AUDIO_X_PN_REALAUDIO_PLUGIN = of("audio", "x-pn-realaudio-plugin", "rmp");
    public final MediaType AUDIO_X_TTA = of("audio", "x-tta");
    public final MediaType AUDIO_X_WAV = of("audio", "x-wav", "wav");
    public final MediaType AUDIO_XM = of("audio", "xm", "xm");
    public final MediaType CHEMICAL_X_CDX = of("chemical", "x-cdx", "cdx");
    public final MediaType CHEMICAL_X_CIF = of("chemical", "x-cif", "cif");
    public final MediaType CHEMICAL_X_CMDF = of("chemical", "x-cmdf", "cmdf");
    public final MediaType CHEMICAL_X_CML = of("chemical", "x-cml", "cml");
    public final MediaType CHEMICAL_X_CSML = of("chemical", "x-csml", "csml");
    public final MediaType CHEMICAL_X_PDB = of("chemical", "x-pdb");
    public final MediaType CHEMICAL_X_XYZ = of("chemical", "x-xyz", "xyz");
    public final MediaType FONT_COLLECTION = of("font", "collection", "ttc");
    public final MediaType FONT_OTF = of("font", "otf", "otf");
    public final MediaType FONT_SFNT = of("font", "sfnt");
    public final MediaType FONT_TTF = of("font", "ttf", "ttf");
    public final MediaType FONT_WOFF = of("font", "woff", "woff");
    public final MediaType FONT_WOFF2 = of("font", "woff2", "woff2");
    public final MediaType IMAGE_BMP = of("image", "bmp", "bmp");
    public final MediaType IMAGE_CGM = of("image", "cgm", "cgm");
    public final MediaType IMAGE_DICOM_RLE = of("image", "dicom-rle");
    public final MediaType IMAGE_EMF = of("image", "emf");
    public final MediaType IMAGE_EXAMPLE = of("image", "example");
    public final MediaType IMAGE_FITS = of("image", "fits");
    public final MediaType IMAGE_G3FAX = of("image", "g3fax", "g3");
    public final MediaType IMAGE_GIF = of("image", "gif", "gif");
    public final MediaType IMAGE_IEF = of("image", "ief", "ief");
    public final MediaType IMAGE_JLS = of("image", "jls");
    public final MediaType IMAGE_JP2 = of("image", "jp2");
    public final MediaType IMAGE_JPEG = of("image", "jpeg", "jpeg", "jpg", "jpe");
    public final MediaType IMAGE_JPM = of("image", "jpm");
    public final MediaType IMAGE_JPX = of("image", "jpx");
    public final MediaType IMAGE_KTX = of("image", "ktx", "ktx");
    public final MediaType IMAGE_NAPLPS = of("image", "naplps");
    public final MediaType IMAGE_PNG = of("image", "png", "png");
    public final MediaType IMAGE_PRS_BTIF = of("image", "prs.btif", "btif");
    public final MediaType IMAGE_PRS_PTI = of("image", "prs.pti");
    public final MediaType IMAGE_PWG_RASTER = of("image", "pwg-raster");
    public final MediaType IMAGE_SGI = of("image", "sgi", "sgi");
    public final MediaType IMAGE_SVG_XML = of("image", "svg+xml", "svg", "svgz");
    public final MediaType IMAGE_T38 = of("image", "t38");
    public final MediaType IMAGE_TIFF = of("image", "tiff", "tiff", "tif");
    public final MediaType IMAGE_TIFF_FX = of("image", "tiff-fx");
    public final MediaType IMAGE_VND_ADOBE_PHOTOSHOP = of("image", "vnd.adobe.photoshop", "psd");
    public final MediaType IMAGE_VND_AIRZIP_ACCELERATOR_AZV = of("image", "vnd.airzip.accelerator.azv");
    public final MediaType IMAGE_VND_CNS_INF2 = of("image", "vnd.cns.inf2");
    public final MediaType IMAGE_VND_DECE_GRAPHIC = of("image", "vnd.dece.graphic", "uvi", "uvvi", "uvg", "uvvg");
    public final MediaType IMAGE_VND_DJVU = of("image", "vnd.djvu", "djvu", "djv");
    public final MediaType IMAGE_VND_DVB_SUBTITLE = of("image", "vnd.dvb.subtitle", "sub");
    public final MediaType IMAGE_VND_DWG = of("image", "vnd.dwg", "dwg");
    public final MediaType IMAGE_VND_DXF = of("image", "vnd.dxf", "dxf");
    public final MediaType IMAGE_VND_FASTBIDSHEET = of("image", "vnd.fastbidsheet", "fbs");
    public final MediaType IMAGE_VND_FPX = of("image", "vnd.fpx", "fpx");
    public final MediaType IMAGE_VND_FST = of("image", "vnd.fst", "fst");
    public final MediaType IMAGE_VND_FUJIXEROX_EDMICS_MMR = of("image", "vnd.fujixerox.edmics-mmr", "mmr");
    public final MediaType IMAGE_VND_FUJIXEROX_EDMICS_RLC = of("image", "vnd.fujixerox.edmics-rlc", "rlc");
    public final MediaType IMAGE_VND_GLOBALGRAPHICS_PGB = of("image", "vnd.globalgraphics.pgb");
    public final MediaType IMAGE_VND_MICROSOFT_ICON = of("image", "vnd.microsoft.icon");
    public final MediaType IMAGE_VND_MIX = of("image", "vnd.mix");
    public final MediaType IMAGE_VND_MOZILLA_APNG = of("image", "vnd.mozilla.apng");
    public final MediaType IMAGE_VND_MS_MODI = of("image", "vnd.ms-modi", "mdi");
    public final MediaType IMAGE_VND_MS_PHOTO = of("image", "vnd.ms-photo", "wdp");
    public final MediaType IMAGE_VND_NET_FPX = of("image", "vnd.net-fpx", "npx");
    public final MediaType IMAGE_VND_RADIANCE = of("image", "vnd.radiance");
    public final MediaType IMAGE_VND_SEALED_PNG = of("image", "vnd.sealed.png");
    public final MediaType IMAGE_VND_SEALEDMEDIA_SOFTSEAL_GIF = of("image", "vnd.sealedmedia.softseal.gif");
    public final MediaType IMAGE_VND_SEALEDMEDIA_SOFTSEAL_JPG = of("image", "vnd.sealedmedia.softseal.jpg");
    public final MediaType IMAGE_VND_SVF = of("image", "vnd.svf");
    public final MediaType IMAGE_VND_TENCENT_TAP = of("image", "vnd.tencent.tap");
    public final MediaType IMAGE_VND_VALVE_SOURCE_TEXTURE = of("image", "vnd.valve.source.texture");
    public final MediaType IMAGE_VND_WAP_WBMP = of("image", "vnd.wap.wbmp", "wbmp");
    public final MediaType IMAGE_VND_XIFF = of("image", "vnd.xiff", "xif");
    public final MediaType IMAGE_VND_ZBRUSH_PCX = of("image", "vnd.zbrush.pcx");
    public final MediaType IMAGE_WEBP = of("image", "webp", "webp");
    public final MediaType IMAGE_WMF = of("image", "wmf");
    public final MediaType IMAGE_X_3DS = of("image", "x-3ds", "3ds");
    public final MediaType IMAGE_X_CMU_RASTER = of("image", "x-cmu-raster", "ras");
    public final MediaType IMAGE_X_CMX = of("image", "x-cmx", "cmx");
    public final MediaType IMAGE_X_FREEHAND = of("image", "x-freehand", "fh", "fhc", "fh4", "fh5", "fh7");
    public final MediaType IMAGE_X_ICON = of("image", "x-icon", "ico");
    public final MediaType IMAGE_X_MRSID_IMAGE = of("image", "x-mrsid-image", "sid");
    public final MediaType IMAGE_X_PCX = of("image", "x-pcx", "pcx");
    public final MediaType IMAGE_X_PICT = of("image", "x-pict", "pic", "pct");
    public final MediaType IMAGE_X_PORTABLE_ANYMAP = of("image", "x-portable-anymap", "pnm");
    public final MediaType IMAGE_X_PORTABLE_BITMAP = of("image", "x-portable-bitmap", "pbm");
    public final MediaType IMAGE_X_PORTABLE_GRAYMAP = of("image", "x-portable-graymap", "pgm");
    public final MediaType IMAGE_X_PORTABLE_PIXMAP = of("image", "x-portable-pixmap", "ppm");
    public final MediaType IMAGE_X_RGB = of("image", "x-rgb", "rgb");
    public final MediaType IMAGE_X_TGA = of("image", "x-tga", "tga");
    public final MediaType IMAGE_X_XBITMAP = of("image", "x-xbitmap", "xbm");
    public final MediaType IMAGE_X_XPIXMAP = of("image", "x-xpixmap", "xpm");
    public final MediaType IMAGE_X_XWINDOWDUMP = of("image", "x-xwindowdump", "xwd");
    public final MediaType MESSAGE_CPIM = of("message", "cpim");
    public final MediaType MESSAGE_DELIVERY_STATUS = of("message", "delivery-status");
    public final MediaType MESSAGE_DISPOSITION_NOTIFICATION = of("message", "disposition-notification");
    public final MediaType MESSAGE_EXAMPLE = of("message", "example");
    public final MediaType MESSAGE_EXTERNAL_BODY = of("message", "external-body");
    public final MediaType MESSAGE_FEEDBACK_REPORT = of("message", "feedback-report");
    public final MediaType MESSAGE_GLOBAL = of("message", "global");
    public final MediaType MESSAGE_GLOBAL_DELIVERY_STATUS = of("message", "global-delivery-status");
    public final MediaType MESSAGE_GLOBAL_DISPOSITION_NOTIFICATION = of("message", "global-disposition-notification");
    public final MediaType MESSAGE_GLOBAL_HEADERS = of("message", "global-headers");
    public final MediaType MESSAGE_HTTP = of("message", "http");
    public final MediaType MESSAGE_IMDN_XML = of("message", "imdn+xml");
    public final MediaType MESSAGE_NEWS = of("message", "news");
    public final MediaType MESSAGE_PARTIAL = of("message", "partial");
    public final MediaType MESSAGE_RFC822 = of("message", "rfc822", "eml", "mime");
    public final MediaType MESSAGE_S_HTTP = of("message", "s-http");
    public final MediaType MESSAGE_SIP = of("message", "sip");
    public final MediaType MESSAGE_SIPFRAG = of("message", "sipfrag");
    public final MediaType MESSAGE_TRACKING_STATUS = of("message", "tracking-status");
    public final MediaType MESSAGE_VND_SI_SIMP = of("message", "vnd.si.simp");
    public final MediaType MESSAGE_VND_WFA_WSC = of("message", "vnd.wfa.wsc");
    public final MediaType MODEL_EXAMPLE = of("model", "example");
    public final MediaType MODEL_GLTF_JSON = of("model", "gltf+json");
    public final MediaType MODEL_IGES = of("model", "iges", "igs", "iges");
    public final MediaType MODEL_MESH = of("model", "mesh", "msh", "mesh", "silo");
    public final MediaType MODEL_VND_COLLADA_XML = of("model", "vnd.collada+xml", "dae");
    public final MediaType MODEL_VND_DWF = of("model", "vnd.dwf", "dwf");
    public final MediaType MODEL_VND_FLATLAND_3DML = of("model", "vnd.flatland.3dml");
    public final MediaType MODEL_VND_GDL = of("model", "vnd.gdl", "gdl");
    public final MediaType MODEL_VND_GS_GDL = of("model", "vnd.gs-gdl");
    public final MediaType MODEL_VND_GTW = of("model", "vnd.gtw", "gtw");
    public final MediaType MODEL_VND_MOML_XML = of("model", "vnd.moml+xml");
    public final MediaType MODEL_VND_MTS = of("model", "vnd.mts", "mts");
    public final MediaType MODEL_VND_OPENGEX = of("model", "vnd.opengex");
    public final MediaType MODEL_VND_PARASOLID_TRANSMIT_BINARY = of("model", "vnd.parasolid.transmit.binary");
    public final MediaType MODEL_VND_PARASOLID_TRANSMIT_TEXT = of("model", "vnd.parasolid.transmit.text");
    public final MediaType MODEL_VND_ROSETTE_ANNOTATED_DATA_MODEL = of("model", "vnd.rosette.annotated-data-model");
    public final MediaType MODEL_VND_VALVE_SOURCE_COMPILED_MAP = of("model", "vnd.valve.source.compiled-map");
    public final MediaType MODEL_VND_VTU = of("model", "vnd.vtu", "vtu");
    public final MediaType MODEL_VRML = of("model", "vrml", "wrl", "vrml");
    public final MediaType MODEL_X3D_BINARY = of("model", "x3d+binary", "x3db", "x3dbz");
    public final MediaType MODEL_X3D_FASTINFOSET = of("model", "x3d+fastinfoset");
    public final MediaType MODEL_X3D_VRML = of("model", "x3d+vrml", "x3dv", "x3dvz");
    public final MediaType MODEL_X3D_XML = of("model", "x3d+xml", "x3d", "x3dz");
    //    public final MediaType MODEL_X3D_VRML = of("model","x3d-vrml");
    public final MediaType MULTIPART_ALTERNATIVE = of("multipart", "alternative");
    public final MediaType MULTIPART_APPLEDOUBLE = of("multipart", "appledouble");
    public final MediaType MULTIPART_BYTERANGES = of("multipart", "byteranges");
    public final MediaType MULTIPART_DIGEST = of("multipart", "digest");
    public final MediaType MULTIPART_ENCRYPTED = of("multipart", "encrypted");
    public final MediaType MULTIPART_EXAMPLE = of("multipart", "example");
    public final MediaType MULTIPART_FORM_DATA = of("multipart", "form-data");
    public final MediaType MULTIPART_HEADER_SET = of("multipart", "header-set");
    public final MediaType MULTIPART_MIXED = of("multipart", "mixed");
    public final MediaType MULTIPART_PARALLEL = of("multipart", "parallel");
    public final MediaType MULTIPART_RELATED = of("multipart", "related");
    public final MediaType MULTIPART_REPORT = of("multipart", "report");
    public final MediaType MULTIPART_SIGNED = of("multipart", "signed");
    public final MediaType MULTIPART_VOICE_MESSAGE = of("multipart", "voice-message");
    public final MediaType MULTIPART_X_MIXED_REPLACE = of("multipart", "x-mixed-replace");
    public final MediaType TEXT_1D_INTERLEAVED_PARITYFEC = of("text", "1d-interleaved-parityfec");
    public final MediaType TEXT_CACHE_MANIFEST = of("text", "cache-manifest", "appcache");
    public final MediaType TEXT_CALENDAR = of("text", "calendar", "ics", "ifb");
    public final MediaType TEXT_CSS = of("text", "css", "css");
    public final MediaType TEXT_CSV = of("text", "csv", "csv");
    public final MediaType TEXT_CSV_SCHEMA = of("text", "csv-schema");
    public final MediaType TEXT_DIRECTORY = of("text", "directory");
    public final MediaType TEXT_DNS = of("text", "dns");
    public final MediaType TEXT_ECMASCRIPT = of("text", "ecmascript");
    public final MediaType TEXT_ENCAPRTP = of("text", "encaprtp");
    public final MediaType TEXT_ENRICHED = of("text", "enriched");
    public final MediaType TEXT_EXAMPLE = of("text", "example");
    public final MediaType TEXT_FWDRED = of("text", "fwdred");
    public final MediaType TEXT_GRAMMAR_REF_LIST = of("text", "grammar-ref-list");
    public final MediaType TEXT_HTML = of("text", "html", "html", "htm");
    public final MediaType TEXT_JAVASCRIPT = of("text", "javascript", "js", "mjs");
    public final MediaType TEXT_JCR_CND = of("text", "jcr-cnd");
    public final MediaType TEXT_MARKDOWN = of("text", "markdown");
    public final MediaType TEXT_MIZAR = of("text", "mizar");
    public final MediaType TEXT_N3 = of("text", "n3", "n3");
    public final MediaType TEXT_PARAMETERS = of("text", "parameters");
    public final MediaType TEXT_PARITYFEC = of("text", "parityfec");
    public final MediaType TEXT_PLAIN = of("text", "plain", "txt", "text", "conf", "def", "list", "log", "in");
    public final MediaType TEXT_PROVENANCE_NOTATION = of("text", "provenance-notation");
    public final MediaType TEXT_PRS_FALLENSTEIN_RST = of("text", "prs.fallenstein.rst");
    public final MediaType TEXT_PRS_LINES_TAG = of("text", "prs.lines.tag", "dsc");
    public final MediaType TEXT_PRS_PROP_LOGIC = of("text", "prs.prop.logic");
    public final MediaType TEXT_RAPTORFEC = of("text", "raptorfec");
    public final MediaType TEXT_RED = of("text", "red");
    public final MediaType TEXT_RFC822_HEADERS = of("text", "rfc822-headers");
    public final MediaType TEXT_RICHTEXT = of("text", "richtext", "rtx");
    public final MediaType TEXT_RTF = of("text", "rtf");
    public final MediaType TEXT_RTP_ENC_AESCM128 = of("text", "rtp-enc-aescm128");
    public final MediaType TEXT_RTPLOOPBACK = of("text", "rtploopback");
    public final MediaType TEXT_RTX = of("text", "rtx");
    public final MediaType TEXT_SGML = of("text", "sgml", "sgml", "sgm");
    public final MediaType TEXT_T140 = of("text", "t140");
    public final MediaType TEXT_TAB_SEPARATED_VALUES = of("text", "tab-separated-values", "tsv");
    public final MediaType TEXT_TROFF = of("text", "troff", "t", "tr", "roff", "man", "me", "ms");
    public final MediaType TEXT_TURTLE = of("text", "turtle", "ttl");
    public final MediaType TEXT_ULPFEC = of("text", "ulpfec");
    public final MediaType TEXT_URI_LIST = of("text", "uri-list", "uri", "uris", "urls");
    public final MediaType TEXT_VCARD = of("text", "vcard", "vcard");
    public final MediaType TEXT_VND_A = of("text", "vnd.a");
    public final MediaType TEXT_VND_ABC = of("text", "vnd.abc");
    public final MediaType TEXT_VND_CURL = of("text", "vnd.curl", "curl");
    public final MediaType TEXT_VND_CURL_DCURL = of("text", "vnd.curl.dcurl", "dcurl");
    public final MediaType TEXT_VND_CURL_MCURL = of("text", "vnd.curl.mcurl", "mcurl");
    public final MediaType TEXT_VND_CURL_SCURL = of("text", "vnd.curl.scurl", "scurl");
    public final MediaType TEXT_VND_DEBIAN_COPYRIGHT = of("text", "vnd.debian.copyright");
    public final MediaType TEXT_VND_DMCLIENTSCRIPT = of("text", "vnd.dmclientscript");
    public final MediaType TEXT_VND_DVB_SUBTITLE = of("text", "vnd.dvb.subtitle", "sub");
    public final MediaType TEXT_VND_ESMERTEC_THEME_DESCRIPTOR = of("text", "vnd.esmertec.theme-descriptor");
    public final MediaType TEXT_VND_FLY = of("text", "vnd.fly", "fly");
    public final MediaType TEXT_VND_FMI_FLEXSTOR = of("text", "vnd.fmi.flexstor", "flx");
    public final MediaType TEXT_VND_GRAPHVIZ = of("text", "vnd.graphviz", "gv");
    public final MediaType TEXT_VND_IN3D_3DML = of("text", "vnd.in3d.3dml", "3dml");
    public final MediaType TEXT_VND_IN3D_SPOT = of("text", "vnd.in3d.spot", "spot");
    public final MediaType TEXT_VND_IPTC_NEWSML = of("text", "vnd.iptc.newsml");
    public final MediaType TEXT_VND_IPTC_NITF = of("text", "vnd.iptc.nitf");
    public final MediaType TEXT_VND_LATEX_Z = of("text", "vnd.latex-z");
    public final MediaType TEXT_VND_MOTOROLA_REFLEX = of("text", "vnd.motorola.reflex");
    public final MediaType TEXT_VND_MS_MEDIAPACKAGE = of("text", "vnd.ms-mediapackage");
    public final MediaType TEXT_VND_NET2PHONE_COMMCENTER_COMMAND = of("text", "vnd.net2phone.commcenter.command");
    public final MediaType TEXT_VND_RADISYS_MSML_BASIC_LAYOUT = of("text", "vnd.radisys.msml-basic-layout");
    public final MediaType TEXT_VND_SI_URICATALOGUE = of("text", "vnd.si.uricatalogue");
    public final MediaType TEXT_VND_SUN_J2ME_APP_DESCRIPTOR = of("text", "vnd.sun.j2me.app-descriptor", "jad");
    public final MediaType TEXT_VND_TROLLTECH_LINGUIST = of("text", "vnd.trolltech.linguist");
    public final MediaType TEXT_VND_WAP_SI = of("text", "vnd.wap.si");
    public final MediaType TEXT_VND_WAP_SL = of("text", "vnd.wap.sl");
    public final MediaType TEXT_VND_WAP_WML = of("text", "vnd.wap.wml", "wml");
    public final MediaType TEXT_VND_WAP_WMLSCRIPT = of("text", "vnd.wap.wmlscript", "wmls");
    public final MediaType TEXT_X_ASM = of("text", "x-asm", "s", "asm");
    public final MediaType TEXT_X_C = of("text", "x-c", "c", "cc", "cxx", "cpp", "h", "hh", "dic");
    public final MediaType TEXT_X_FORTRAN = of("text", "x-fortran", "f", "for", "f77", "f90");
    public final MediaType TEXT_X_JAVA_SOURCE = of("text", "x-java-source", "java");
    public final MediaType TEXT_X_NFO = of("text", "x-nfo", "nfo");
    public final MediaType TEXT_X_OPML = of("text", "x-opml", "opml");
    public final MediaType TEXT_X_PASCAL = of("text", "x-pascal", "p", "pas");
    public final MediaType TEXT_X_SETEXT = of("text", "x-setext", "etx");
    public final MediaType TEXT_X_SFV = of("text", "x-sfv", "sfv");
    public final MediaType TEXT_X_UUENCODE = of("text", "x-uuencode", "uu");
    public final MediaType TEXT_X_VCALENDAR = of("text", "x-vcalendar", "vcs");
    public final MediaType TEXT_X_VCARD = of("text", "x-vcard", "vcf");
    public final MediaType TEXT_XML = of("text", "xml");
    public final MediaType TEXT_XML_EXTERNAL_PARSED_ENTITY = of("text", "xml-external-parsed-entity");
    public final MediaType VIDEO_1D_INTERLEAVED_PARITYFEC = of("video", "1d-interleaved-parityfec");
    public final MediaType VIDEO_3GPP = of("video", "3gpp", "3gp");
    public final MediaType VIDEO_3GPP_TT = of("video", "3gpp-tt");
    public final MediaType VIDEO_3GPP2 = of("video", "3gpp2", "3g2");
    public final MediaType VIDEO_BMPEG = of("video", "bmpeg");
    public final MediaType VIDEO_BT656 = of("video", "bt656");
    public final MediaType VIDEO_CELB = of("video", "celb");
    public final MediaType VIDEO_DV = of("video", "dv");
    public final MediaType VIDEO_ENCAPRTP = of("video", "encaprtp");
    public final MediaType VIDEO_EXAMPLE = of("video", "example");
    public final MediaType VIDEO_H261 = of("video", "h261", "h261");
    public final MediaType VIDEO_H263 = of("video", "h263", "h263");
    public final MediaType VIDEO_H263_1998 = of("video", "h263-1998");
    public final MediaType VIDEO_H263_2000 = of("video", "h263-2000");
    public final MediaType VIDEO_H264 = of("video", "h264", "h264");
    public final MediaType VIDEO_H264_RCDO = of("video", "h264-rcdo");
    public final MediaType VIDEO_H264_SVC = of("video", "h264-svc");
    public final MediaType VIDEO_H265 = of("video", "h265");
    public final MediaType VIDEO_ISO_SEGMENT = of("video", "iso.segment");
    public final MediaType VIDEO_JPEG = of("video", "jpeg", "jpgv");
    public final MediaType VIDEO_JPEG2000 = of("video", "jpeg2000");
    public final MediaType VIDEO_JPM = of("video", "jpm", "jpm", "jpgm");
    public final MediaType VIDEO_MJ2 = of("video", "mj2", "mj2", "mjp2");
    public final MediaType VIDEO_MP1S = of("video", "mp1s");
    public final MediaType VIDEO_MP2P = of("video", "mp2p");
    public final MediaType VIDEO_MP2T = of("video", "mp2t");
    public final MediaType VIDEO_MP4 = of("video", "mp4", "mp4", "mp4v", "mpg4");
    public final MediaType VIDEO_MP4V_ES = of("video", "mp4v-es");
    public final MediaType VIDEO_MPEG = of("video", "mpeg", "mpeg", "mpg", "mpe", "m1v", "m2v");
    public final MediaType VIDEO_MPEG4_GENERIC = of("video", "mpeg4-generic");
    public final MediaType VIDEO_MPV = of("video", "mpv");
    public final MediaType VIDEO_NV = of("video", "nv");
    public final MediaType VIDEO_OGG = of("video", "ogg", "ogv");
    public final MediaType VIDEO_PARITYFEC = of("video", "parityfec");
    public final MediaType VIDEO_POINTER = of("video", "pointer");
    public final MediaType VIDEO_QUICKTIME = of("video", "quicktime", "qt", "mov");
    public final MediaType VIDEO_RAPTORFEC = of("video", "raptorfec");
    public final MediaType VIDEO_RAW = of("video", "raw");
    public final MediaType VIDEO_RTP_ENC_AESCM128 = of("video", "rtp-enc-aescm128");
    public final MediaType VIDEO_RTPLOOPBACK = of("video", "rtploopback");
    public final MediaType VIDEO_RTX = of("video", "rtx");
    public final MediaType VIDEO_SMPTE292M = of("video", "smpte292m");
    public final MediaType VIDEO_ULPFEC = of("video", "ulpfec");
    public final MediaType VIDEO_VC1 = of("video", "vc1");
    public final MediaType VIDEO_VND_CCTV = of("video", "vnd.cctv");
    public final MediaType VIDEO_VND_DECE_HD = of("video", "vnd.dece.hd", "uvh", "uvvh");
    public final MediaType VIDEO_VND_DECE_MOBILE = of("video", "vnd.dece.mobile", "uvm", "uvvm");
    public final MediaType VIDEO_VND_DECE_MP4 = of("video", "vnd.dece.mp4");
    public final MediaType VIDEO_VND_DECE_PD = of("video", "vnd.dece.pd", "uvp", "uvvp");
    public final MediaType VIDEO_VND_DECE_SD = of("video", "vnd.dece.sd", "uvs", "uvvs");
    public final MediaType VIDEO_VND_DECE_VIDEO = of("video", "vnd.dece.video", "uvv", "uvvv");
    public final MediaType VIDEO_VND_DIRECTV_MPEG = of("video", "vnd.directv.mpeg");
    public final MediaType VIDEO_VND_DIRECTV_MPEG_TTS = of("video", "vnd.directv.mpeg-tts");
    public final MediaType VIDEO_VND_DLNA_MPEG_TTS = of("video", "vnd.dlna.mpeg-tts");
    public final MediaType VIDEO_VND_DVB_FILE = of("video", "vnd.dvb.file", "dvb");
    public final MediaType VIDEO_VND_FVT = of("video", "vnd.fvt", "fvt");
    public final MediaType VIDEO_VND_HNS_VIDEO = of("video", "vnd.hns.video");
    public final MediaType VIDEO_VND_IPTVFORUM_1DPARITYFEC_1010 = of("video", "vnd.iptvforum.1dparityfec-1010");
    public final MediaType VIDEO_VND_IPTVFORUM_1DPARITYFEC_2005 = of("video", "vnd.iptvforum.1dparityfec-2005");
    public final MediaType VIDEO_VND_IPTVFORUM_2DPARITYFEC_1010 = of("video", "vnd.iptvforum.2dparityfec-1010");
    public final MediaType VIDEO_VND_IPTVFORUM_2DPARITYFEC_2005 = of("video", "vnd.iptvforum.2dparityfec-2005");
    public final MediaType VIDEO_VND_IPTVFORUM_TTSAVC = of("video", "vnd.iptvforum.ttsavc");
    public final MediaType VIDEO_VND_IPTVFORUM_TTSMPEG2 = of("video", "vnd.iptvforum.ttsmpeg2");
    public final MediaType VIDEO_VND_MOTOROLA_VIDEO = of("video", "vnd.motorola.video");
    public final MediaType VIDEO_VND_MOTOROLA_VIDEOP = of("video", "vnd.motorola.videop");
    public final MediaType VIDEO_VND_MPEGURL = of("video", "vnd.mpegurl", "mxu", "m4u");
    public final MediaType VIDEO_VND_MS_PLAYREADY_MEDIA_PYV = of("video", "vnd.ms-playready.media.pyv", "pyv");
    public final MediaType VIDEO_VND_NOKIA_INTERLEAVED_MULTIMEDIA = of("video", "vnd.nokia.interleaved-multimedia");
    public final MediaType VIDEO_VND_NOKIA_VIDEOVOIP = of("video", "vnd.nokia.videovoip");
    public final MediaType VIDEO_VND_OBJECTVIDEO = of("video", "vnd.objectvideo");
    public final MediaType VIDEO_VND_RADGAMETTOOLS_BINK = of("video", "vnd.radgamettools.bink");
    public final MediaType VIDEO_VND_RADGAMETTOOLS_SMACKER = of("video", "vnd.radgamettools.smacker");
    public final MediaType VIDEO_VND_SEALED_MPEG1 = of("video", "vnd.sealed.mpeg1");
    public final MediaType VIDEO_VND_SEALED_MPEG4 = of("video", "vnd.sealed.mpeg4");
    public final MediaType VIDEO_VND_SEALED_SWF = of("video", "vnd.sealed.swf");
    public final MediaType VIDEO_VND_SEALEDMEDIA_SOFTSEAL_MOV = of("video", "vnd.sealedmedia.softseal.mov");
    public final MediaType VIDEO_VND_UVVU_MP4 = of("video", "vnd.uvvu.mp4", "uvu", "uvvu");
    public final MediaType VIDEO_VND_VIVO = of("video", "vnd.vivo", "viv");
    public final MediaType VIDEO_VP8 = of("video", "vp8");
    public final MediaType VIDEO_WEBM = of("video", "webm", "webm");
    public final MediaType VIDEO_X_F4V = of("video", "x-f4v", "f4v");
    public final MediaType VIDEO_X_FLI = of("video", "x-fli", "fli");
    public final MediaType VIDEO_X_FLV = of("video", "x-flv", "flv");
    public final MediaType VIDEO_X_M4V = of("video", "x-m4v", "m4v");
    public final MediaType VIDEO_X_MATROSKA = of("video", "x-matroska", "mkv", "mk3d", "mks");
    public final MediaType VIDEO_X_MNG = of("video", "x-mng", "mng");
    public final MediaType VIDEO_X_MS_ASF = of("video", "x-ms-asf", "asf", "asx");
    public final MediaType VIDEO_X_MS_VOB = of("video", "x-ms-vob", "vob");
    public final MediaType VIDEO_X_MS_WM = of("video", "x-ms-wm", "wm");
    public final MediaType VIDEO_X_MS_WMV = of("video", "x-ms-wmv", "wmv");
    public final MediaType VIDEO_X_MS_WMX = of("video", "x-ms-wmx", "wmx");
    public final MediaType VIDEO_X_MS_WVX = of("video", "x-ms-wvx", "wvx");
    public final MediaType VIDEO_X_MSVIDEO = of("video", "x-msvideo", "avi");
    public final MediaType VIDEO_X_SGI_MOVIE = of("video", "x-sgi-movie", "movie");
    public final MediaType VIDEO_X_SMV = of("video", "x-smv", "smv");
    public final MediaType X_CONFERENCE_X_COOLTALK = of("x-conference", "x-cooltalk", "ice");

    private static final Map<String, MediaType> TYPES_POOL = new ConcurrentHashMap<>(1840);

    public MediaType of(String type, String subType, Set<String> extensions) {
        MediaType mediaType = new MediaType(type, subType, extensions);
        TYPES_POOL.put(mediaType.getFullType(), mediaType);
        return mediaType;
    }

    public MediaType of(String type, String subType, Collection<? extends String> extensions) {
        return of(type, subType, new HashSet<>(extensions));
    }

    public MediaType of(String type, String subType, String... extensions) {
        if (extensions == null || extensions.length == 0) {
            return of(type, subType, java.util.Collections.emptySet());
        } else {
            return of(type, subType, new HashSet<>(Arrays.asList(extensions)));
        }
    }

    public MediaType of(String type, String subType) {
        return of(type, subType, Collections.emptySet());
    }

    public MediaType valueOf(String fullType) {
        return TYPES_POOL.get(fullType);
    }

    public Optional<MediaType> optionalValueOf(String fullType) {
        return Optional.ofNullable(valueOf(fullType));
    }

    public MediaType valueOf(String type, String subType) {
        return valueOf(type + "/" + subType);
    }

    public Optional<MediaType> optionalValueOf(String type, String subType) {
        return Optional.ofNullable(valueOf(type, subType));
    }
}
